{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../node_modules/node_modules/babel-plugin-transform-async-to-promises/helpers.js", "../node_modules/@barba/core/src/modules/Logger.ts", "../node_modules/@barba/core/src/defs/hooks.ts", "../node_modules/node_modules/path-to-regexp/index.js", "../node_modules/@barba/core/src/schemas/attribute.ts", "../node_modules/@barba/core/src/utils/dom.ts", "../node_modules/@barba/core/src/utils/history.ts", "../node_modules/@barba/core/src/utils/helpers.ts", "../node_modules/@barba/core/src/utils/url.ts", "../node_modules/@barba/core/src/utils/request.ts", "../node_modules/node_modules/is-promise/index.js", "../node_modules/@barba/core/src/utils/run-async.ts", "../node_modules/@barba/core/src/hooks.ts", "../node_modules/@barba/core/src/modules/Ignore.ts", "../node_modules/@barba/core/src/modules/Cache.ts", "../node_modules/@barba/core/src/modules/Prevent.ts", "../node_modules/@barba/core/src/modules/Error.ts", "../node_modules/@barba/core/src/modules/Store.ts", "../node_modules/@barba/core/src/modules/Transitions.ts", "../node_modules/@barba/core/src/modules/Views.ts", "../node_modules/@barba/core/src/polyfills/index.ts", "../node_modules/@barba/core/src/schemas/page.ts", "../node_modules/@barba/core/src/core.ts", "../src/index.ts", "../node_modules/motion/dist/main.es.js", "../node_modules/@motionone/dom/dist/index.es.js", "../node_modules/@motionone/dom/dist/animate/index.es.js", "../node_modules/@motionone/animation/dist/index.es.js", "../node_modules/@motionone/animation/dist/Animation.es.js", "../node_modules/@motionone/utils/dist/index.es.js", "../node_modules/@motionone/utils/dist/array.es.js", "../node_modules/@motionone/utils/dist/clamp.es.js", "../node_modules/@motionone/utils/dist/defaults.es.js", "../node_modules/@motionone/utils/dist/easing.es.js", "../node_modules/@motionone/utils/dist/is-easing-list.es.js", "../node_modules/@motionone/utils/dist/is-number.es.js", "../node_modules/@motionone/utils/dist/wrap.es.js", "../node_modules/@motionone/utils/dist/interpolate.es.js", "../node_modules/@motionone/utils/dist/mix.es.js", "../node_modules/@motionone/utils/dist/noop.es.js", "../node_modules/@motionone/utils/dist/offset.es.js", "../node_modules/@motionone/utils/dist/progress.es.js", "../node_modules/@motionone/utils/dist/is-cubic-bezier.es.js", "../node_modules/@motionone/utils/dist/is-easing-generator.es.js", "../node_modules/@motionone/utils/dist/is-function.es.js", "../node_modules/@motionone/utils/dist/is-string.es.js", "../node_modules/@motionone/utils/dist/time.es.js", "../node_modules/@motionone/animation/dist/utils/easing.es.js", "../node_modules/@motionone/easing/dist/index.es.js", "../node_modules/@motionone/easing/dist/cubic-bezier.es.js", "../node_modules/@motionone/easing/dist/steps.es.js", "../node_modules/@motionone/dom/dist/animate/create-animate.es.js", "../node_modules/hey-listen/dist/hey-listen.es.js", "../node_modules/@motionone/dom/dist/animate/animate-style.es.js", "../node_modules/@motionone/dom/dist/animate/data.es.js", "../node_modules/@motionone/types/dist/index.es.js", "../node_modules/@motionone/types/dist/MotionValue.es.js", "../node_modules/@motionone/dom/dist/animate/utils/css-var.es.js", "../node_modules/@motionone/dom/dist/animate/utils/transforms.es.js", "../node_modules/@motionone/dom/dist/animate/utils/easing.es.js", "../node_modules/@motionone/dom/dist/animate/utils/feature-detection.es.js", "../node_modules/@motionone/dom/dist/animate/utils/keyframes.es.js", "../node_modules/@motionone/dom/dist/animate/style.es.js", "../node_modules/@motionone/dom/dist/animate/utils/get-style-name.es.js", "../node_modules/@motionone/dom/dist/animate/utils/stop-animation.es.js", "../node_modules/@motionone/dom/dist/animate/utils/get-unit.es.js", "../node_modules/@motionone/dom/dist/animate/utils/options.es.js", "../node_modules/@motionone/dom/dist/utils/resolve-elements.es.js", "../node_modules/@motionone/dom/dist/animate/utils/controls.es.js", "../node_modules/@motionone/dom/dist/utils/stagger.es.js", "../node_modules/motion/dist/animate.es.js"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[_asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, result);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\tvar result = _entry(_this);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tresult.then(returnValue, function(error) {\n\t\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturnValue(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n", "/**\n * @barba/core/modules/Logger\n * <br><br>\n * ## Logger.\n *\n * - Display informations via the console\n *\n * @module core/modules/Logger\n * @preferred\n */\n\n/***/\n\n/**\n * Log levels, all lower level messages are printed\n *\n * 0. mute\n * 1. error = `console.error()`\n * 2. warning= `console.warn()`\n * 3. info = `console.info()`\n * 4. debug = `console.log()`\n */\nexport enum LogLevels {\n  off = 0,\n  error = 1,\n  warning = 2,\n  info = 3,\n  debug = 4,\n}\n\n/**\n * Global log level\n */\nlet _level: number = LogLevels.off;\n\nexport class Logger {\n  /**\n   * Get global log level.\n   */\n  public static getLevel(): number {\n    return _level;\n  }\n\n  /**\n   * Set global log level.\n   */\n  public static setLevel(name: keyof typeof LogLevels): number {\n    _level = LogLevels[name];\n\n    return _level;\n  }\n\n  /**\n   * Log \"prefix\".\n   */\n  private _source: string;\n\n  /**\n   * Creates an instance of Logger.\n   */\n  constructor(source: string) {\n    this._source = source;\n  }\n\n  /**\n   * Permanent, unremovable log.\n   */\n  // public print(...objects: any[]): void {\n  //   this._log(console.info, LogLevels.off, objects);\n  // }\n\n  /**\n   * Error log.\n   */\n  public error(...objects: any[]): void {\n    this._log(console.error, LogLevels.error, objects);\n  }\n\n  /**\n   * Warn log.\n   */\n  public warn(...objects: any[]): void {\n    this._log(console.warn, LogLevels.warning, objects);\n  }\n\n  /**\n   * Info log.\n   */\n  public info(...objects: any[]): void {\n    this._log(console.info, LogLevels.info, objects);\n  }\n\n  /**\n   * Debug log.\n   */\n  public debug(...objects: any[]): void {\n    this._log(console.log, LogLevels.debug, objects);\n  }\n\n  /**\n   * Internal logger.\n   */\n  private _log(fn: () => void, level: number, objects: any[]): void {\n    if (level <= Logger.getLevel()) {\n      fn.apply(console, ([`[${this._source}] `].concat(objects) as unknown) as [\n\n      ]);\n    }\n  }\n}\n", "/**\n * @module typings/core\n */\nimport { ITransitionData, ITransitionPage, IViewData } from './index';\n\nexport type HooksBarba =\n  | 'ready'\n  | 'page'\n  | 'reset'\n  | 'currentAdded'\n  | 'currentRemoved'\n  | 'nextAdded'\n  | 'nextRemoved';\n\nexport type HooksOnce = 'beforeOnce' | 'once' | 'afterOnce';\n\nexport type HooksPage =\n  | 'before'\n  | 'beforeLeave'\n  | 'leave'\n  | 'afterLeave'\n  | 'beforeEnter'\n  | 'enter'\n  | 'afterEnter'\n  | 'after';\n\nexport type HooksBefore = 'beforeOnce' | 'beforeLeave' | 'beforeEnter';\nexport type HooksAfter = 'afterOnce' | 'afterLeave' | 'afterEnter';\n\nexport type HooksTransition = HooksOnce | HooksPage;\nexport type HooksView = HooksBefore | HooksAfter;\nexport type HooksAll = HooksBarba | HooksTransition;\n\n// Allow optional \"dynamically created\" hooks\nexport type HooksTransitionMap = { [key in HooksTransition]?: any };\n\nexport type HookFunction = (\n  data?: ITransitionData | IViewData,\n  t?: ITransitionPage\n) => Promise<void> | void;\n\nexport class HookMethods {\n  public before: (fn: HookFunction, ctx?: any) => void;\n  public beforeLeave: (fn: HookFunction, ctx?: any) => void;\n  public leave: (fn: HookFunction, ctx?: any) => void;\n  public afterLeave: (fn: HookFunction, ctx?: any) => void;\n  public beforeEnter: (fn: HookFunction, ctx?: any) => void;\n  public enter: (fn: HookFunction, ctx?: any) => void;\n  public afterEnter: (fn: HookFunction, ctx?: any) => void;\n  public after: (fn: HookFunction, ctx?: any) => void;\n}\n", "/**\n * Expose `pathToRegexp`.\n */\nmodule.exports = pathToRegexp\nmodule.exports.match = match\nmodule.exports.regexpToFunction = regexpToFunction\nmodule.exports.parse = parse\nmodule.exports.compile = compile\nmodule.exports.tokensToFunction = tokensToFunction\nmodule.exports.tokensToRegExp = tokensToRegExp\n\n/**\n * Default configs.\n */\nvar DEFAULT_DELIMITER = '/'\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \":test(\\\\d+)?\" => [\"test\", \"\\d+\", undefined, \"?\"]\n  // \"(\\\\d+)\"  => [undefined, undefined, \"\\d+\", undefined]\n  '(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?'\n].join('|'), 'g')\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = []\n  var key = 0\n  var index = 0\n  var path = ''\n  var defaultDelimiter = (options && options.delimiter) || DEFAULT_DELIMITER\n  var whitelist = (options && options.whitelist) || undefined\n  var pathEscaped = false\n  var res\n\n  while ((res = PATH_REGEXP.exec(str)) !== null) {\n    var m = res[0]\n    var escaped = res[1]\n    var offset = res.index\n    path += str.slice(index, offset)\n    index = offset + m.length\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1]\n      pathEscaped = true\n      continue\n    }\n\n    var prev = ''\n    var name = res[2]\n    var capture = res[3]\n    var group = res[4]\n    var modifier = res[5]\n\n    if (!pathEscaped && path.length) {\n      var k = path.length - 1\n      var c = path[k]\n      var matches = whitelist ? whitelist.indexOf(c) > -1 : true\n\n      if (matches) {\n        prev = c\n        path = path.slice(0, k)\n      }\n    }\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path)\n      path = ''\n      pathEscaped = false\n    }\n\n    var repeat = modifier === '+' || modifier === '*'\n    var optional = modifier === '?' || modifier === '*'\n    var pattern = capture || group\n    var delimiter = prev || defaultDelimiter\n\n    tokens.push({\n      name: name || key++,\n      prefix: prev,\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      pattern: pattern\n        ? escapeGroup(pattern)\n        : '[^' + escapeString(delimiter === defaultDelimiter ? delimiter : (delimiter + defaultDelimiter)) + ']+?'\n    })\n  }\n\n  // Push any remaining characters.\n  if (path || index < str.length) {\n    tokens.push(path + str.substr(index))\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options), options)\n}\n\n/**\n * Create path match function from `path-to-regexp` spec.\n */\nfunction match (str, options) {\n  var keys = []\n  var re = pathToRegexp(str, keys, options)\n  return regexpToFunction(re, keys)\n}\n\n/**\n * Create a path match function from `path-to-regexp` output.\n */\nfunction regexpToFunction (re, keys) {\n  return function (pathname, options) {\n    var m = re.exec(pathname)\n    if (!m) return false\n\n    var path = m[0]\n    var index = m.index\n    var params = {}\n    var decode = (options && options.decode) || decodeURIComponent\n\n    for (var i = 1; i < m.length; i++) {\n      if (m[i] === undefined) continue\n\n      var key = keys[i - 1]\n\n      if (key.repeat) {\n        params[key.name] = m[i].split(key.delimiter).map(function (value) {\n          return decode(value, key)\n        })\n      } else {\n        params[key.name] = decode(m[i], key)\n      }\n    }\n\n    return { path: path, index: index, params: params }\n  }\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens, options) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length)\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$', flags(options))\n    }\n  }\n\n  return function (data, options) {\n    var path = ''\n    var encode = (options && options.encode) || encodeURIComponent\n    var validate = options ? options.validate !== false : true\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i]\n\n      if (typeof token === 'string') {\n        path += token\n        continue\n      }\n\n      var value = data ? data[token.name] : undefined\n      var segment\n\n      if (Array.isArray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but got array')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) continue\n\n          throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j], token)\n\n          if (validate && !matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\"')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment\n        }\n\n        continue\n      }\n\n      if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n        segment = encode(String(value), token)\n\n        if (validate && !matches[i].test(segment)) {\n          throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but got \"' + segment + '\"')\n        }\n\n        path += token.prefix + segment\n        continue\n      }\n\n      if (token.optional) continue\n\n      throw new TypeError('Expected \"' + token.name + '\" to be ' + (token.repeat ? 'an array' : 'a string'))\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$/()])/g, '\\\\$1')\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options && options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {Array=}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  if (!keys) return path\n\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g)\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        pattern: null\n      })\n    }\n  }\n\n  return path\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = []\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source)\n  }\n\n  return new RegExp('(?:' + parts.join('|') + ')', flags(options))\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}  tokens\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  options = options || {}\n\n  var strict = options.strict\n  var start = options.start !== false\n  var end = options.end !== false\n  var delimiter = options.delimiter || DEFAULT_DELIMITER\n  var endsWith = [].concat(options.endsWith || []).map(escapeString).concat('$').join('|')\n  var route = start ? '^' : ''\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i]\n\n    if (typeof token === 'string') {\n      route += escapeString(token)\n    } else {\n      var capture = token.repeat\n        ? '(?:' + token.pattern + ')(?:' + escapeString(token.delimiter) + '(?:' + token.pattern + '))*'\n        : token.pattern\n\n      if (keys) keys.push(token)\n\n      if (token.optional) {\n        if (!token.prefix) {\n          route += '(' + capture + ')?'\n        } else {\n          route += '(?:' + escapeString(token.prefix) + '(' + capture + '))?'\n        }\n      } else {\n        route += escapeString(token.prefix) + '(' + capture + ')'\n      }\n    }\n  }\n\n  if (end) {\n    if (!strict) route += '(?:' + escapeString(delimiter) + ')?'\n\n    route += endsWith === '$' ? '$' : '(?=' + endsWith + ')'\n  } else {\n    var endToken = tokens[tokens.length - 1]\n    var isEndDelimited = typeof endToken === 'string'\n      ? endToken[endToken.length - 1] === delimiter\n      : endToken === undefined\n\n    if (!strict) route += '(?:' + escapeString(delimiter) + '(?=' + endsWith + '))?'\n    if (!isEndDelimited) route += '(?=' + escapeString(delimiter) + '|' + endsWith + ')'\n  }\n\n  return new RegExp(route, flags(options))\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {Array=}                keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, keys)\n  }\n\n  if (Array.isArray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), keys, options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), keys, options)\n}\n", "/**\n * @barba/core/schemas\n * <br><br>\n * ## Schemas description.\n *\n * @module core/schemas\n * @preferred\n */\n\n/***/\n\n// Definitions\nimport { ISchemaAttribute } from '../defs';\n\n/**\n * See [[ISchemaAttribute]]\n */\nexport const schemaAttribute: ISchemaAttribute = {\n  container: 'container',\n  history: 'history',\n  namespace: 'namespace',\n  prefix: 'data-barba',\n  prevent: 'prevent',\n  wrapper: 'wrapper',\n};\n", "/**\n * @barba/core/utils/dom\n * <br><br>\n * ## Dom utils\n *\n * - Access DOM contents\n * - DOM vs string conversions\n *\n * @module core/utils/dom\n * @preferred\n */\n\n/***/\n\nimport path from 'path';\n\n// Definitions\nimport { ISchemaAttribute, Link, Scope, Wrapper } from '../defs';\n// Schemas\nimport { schemaAttribute } from '../schemas/attribute';\n\nexport class Dom {\n  private _attr: ISchemaAttribute = schemaAttribute;\n  private _parser: DOMParser = new DOMParser();\n\n  /**\n   * Convert HTMLDocument to string.\n   */\n  public toString(el: HTMLElement): string {\n    return el.outerHTML;\n  }\n\n  /**\n   * Parse HTML string to HTMLDocument.\n   */\n  // see https://github.com/barbajs/barba/issues/362\n  // Seems that using DOMParser.parseFromString causes this issue.\n  public toDocument(htmlString: string): HTMLDocument {\n    return this._parser.parseFromString(htmlString, 'text/html');\n  }\n\n  /**\n   * Parse HTML string to DIVElement.\n   *\n   * DOMParser.parseFromString fails with img[srcset] on iOS.\n   * see https://github.com/barbajs/barba/issues/362\n   */\n  public toElement(htmlString: string): HTMLDivElement {\n    const div = document.createElement('div');\n\n    div.innerHTML = htmlString;\n    return div;\n  }\n\n  /**\n   * Get HTML content.\n   */\n  public getHtml(doc: HTMLDocument = document): string {\n    return this.toString(doc.documentElement);\n  }\n\n  /**\n   * Get full document content.\n   */\n  // getDocument(el = document.documentElement) {\n  //   return this.toStr(el);\n  // },\n\n  /**\n   * Get `[data-barba=\"wrapper\"]`.\n   */\n  public getWrapper(scope: Scope = document): Wrapper {\n    return scope.querySelector(\n      `[${this._attr.prefix}=\"${this._attr.wrapper}\"]`\n    );\n  }\n\n  /**\n   * Get `[data-barba=\"container\"]`.\n   */\n  public getContainer(scope: Scope = document): HTMLElement | null {\n    return scope.querySelector(\n      `[${this._attr.prefix}=\"${this._attr.container}\"]`\n    );\n  }\n\n  /**\n   * Remove container and store next sibling (if applicable).\n   */\n  public removeContainer(container: HTMLElement) {\n    if (document.body.contains(container)) {\n      container.parentNode.removeChild(container);\n    }\n  }\n\n  /**\n   * Add container before next sibling or at the end of the wrapper.\n   */\n  public addContainer(container: HTMLElement, wrapper: HTMLElement) {\n    const existingContainer = this.getContainer();\n\n    if (existingContainer) {\n      this._insertAfter(container, existingContainer);\n    } else {\n      wrapper.appendChild(container);\n    }\n  }\n\n  /**\n   * Get `[data-barba-namespace]`.\n   */\n  public getNamespace(scope: Scope = document): string | null {\n    const ns = scope.querySelector(\n      `[${this._attr.prefix}-${this._attr.namespace}]`\n    );\n\n    return ns\n      ? ns.getAttribute(`${this._attr.prefix}-${this._attr.namespace}`)\n      : null;\n  }\n\n  /**\n   * Get URL from `href` value.\n   */\n  public getHref(el: Link): string | null {\n    // HTML tagName is UPPERCASE, xhtml tagName keeps existing case.\n    if (el.tagName && el.tagName.toLowerCase() === 'a') {\n      // HTMLAnchorElement, full URL available\n      if (typeof el.href === 'string') {\n        return el.href;\n      }\n\n      // Probably a SVGAElement…\n      const href = el.getAttribute('href') || el.getAttribute('xlink:href');\n\n      /* istanbul ignore else */\n      if (href) {\n        // When link comes from SVG, `href` returns an object, not a string.\n        const attr: string =\n          ((href as unknown) as SVGAnimatedString).baseVal || href;\n\n        return this.resolveUrl(attr);\n      }\n    }\n    return null;\n  }\n\n  // Copyright 2014 Simon Lydell\n  // X11 (“MIT”) Licensed. (See LICENSE\n  // https://github.com/lydell/resolve-url/blob/master/resolve-url.js\n  /* istanbul ignore next */\n  public resolveUrl(...urls: string[]) {\n    const numUrls = urls.length;\n\n    if (numUrls === 0) {\n      throw new Error('resolveUrl requires at least one argument; got none.');\n    }\n\n    const base = document.createElement('base');\n    base.href = arguments[0];\n\n    if (numUrls === 1) {\n      return base.href;\n    }\n\n    const head = document.getElementsByTagName('head')[0];\n    head.insertBefore(base, head.firstChild);\n\n    const a = document.createElement('a');\n    let resolved;\n\n    for (let index = 1; index < numUrls; index++) {\n      a.href = arguments[index];\n      resolved = a.href;\n      base.href = resolved;\n    }\n\n    head.removeChild(base);\n\n    return resolved;\n  }\n\n  /**\n   * Insert node after another node.\n   */\n  private _insertAfter(newNode: Node, referenceNode: Node) {\n    referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);\n  }\n}\n\nconst dom = new Dom();\n\nexport { dom };\n", "import { HistoryAction, LinkEvent, Trigger } from '../defs';\n// Schemas\nimport { schemaAttribute } from '../schemas/attribute';\n\n/**\n * @barba/core/utils/history\n * <br><br>\n * ## History manager.\n *\n * - Keep track of the navigation history\n *\n * @module core/utils/history\n * @preferred\n */\n\n/**\n * State item.\n *\n * @property from\n * @property index\n */\ninterface IHistoryItem {\n  /** origin */\n  from: string;\n  /** index */\n  index: number;\n  /** states */\n  states: IStateItem[];\n}\n\n/***/\ninterface ICoords {\n  x: number;\n  y: number;\n}\n\n/**\n * History item.\n *\n * @property namespace\n * @property scroll\n * @property URL\n */\ninterface IStateItem {\n  /** namespace */\n  ns: string | undefined;\n  /** Scroll position */\n  scroll: ICoords;\n  /** URL */\n  url: string;\n}\n\nexport class History {\n  private _session: string;\n  private _states: IStateItem[] = [];\n  private _pointer = -1;\n\n  /**\n   * Init with first state.\n   */\n  public init(url: string, ns: string): void {\n    this._session = 'barba';\n    const index = 0;\n\n    const state: IStateItem = {\n      ns,\n      scroll: {\n        x: window.scrollX,\n        y: window.scrollY,\n      },\n      url,\n    };\n\n    this._states.push(state);\n    this._pointer = index;\n\n    const item: IHistoryItem = {\n      from: this._session,\n      index,\n      states: [...this._states],\n    };\n\n    window.history && window.history.replaceState(item, '', url);\n  }\n\n  public change(\n    url: string,\n    trigger: Trigger,\n    e?: LinkEvent | PopStateEvent\n  ): Trigger {\n    if (e && (e as PopStateEvent).state) {\n      // If popstate, move to existing state\n      // and get back/forward direction.\n      const { state }: { state: IHistoryItem } = e as PopStateEvent;\n      const { index } = state;\n      const diff = this._pointer - index;\n\n      trigger = this._getDirection(diff);\n\n      // Work with previous states\n      this.replace(state.states);\n      this._pointer = index;\n    } else {\n      // Add new state\n      this.add(url, trigger);\n    }\n\n    return trigger;\n  }\n\n  /**\n   * Add a new state.\n   */\n  public add(url: string, trigger: Trigger): void {\n    // If no state, it will be updated later.\n    const ns = 'tmp';\n    const index = this.size;\n    const action = this._getAction(trigger);\n    const state: IStateItem = {\n      ns,\n      scroll: {\n        x: window.scrollX,\n        y: window.scrollY,\n      },\n      url,\n    };\n\n    this._states.push(state);\n    this._pointer = index;\n\n    const item: IHistoryItem = {\n      from: this._session,\n      index,\n      states: [...this._states],\n    };\n\n    switch (action) {\n      case 'push':\n        window.history && window.history.pushState(item, '', url);\n        break;\n      case 'replace':\n        window.history && window.history.replaceState(item, '', url);\n        break;\n      /* istanbul ignore next */\n      default:\n    }\n  }\n\n  /**\n   * Update state.\n   */\n  public update(data: any, i?: number): void {\n    const index = i || this._pointer;\n    const existing = this.get(index);\n    const state: IStateItem = {\n      ...existing,\n      ...data,\n    };\n\n    this.set(index, state);\n  }\n\n  /**\n   * Remove last state.\n   */\n  public remove(i?: number): void {\n    if (i) {\n      this._states.splice(i, 1);\n    } else {\n      this._states.pop();\n    }\n\n    this._pointer--;\n  }\n\n  /**\n   * Delete all states.\n   */\n  public clear(): void {\n    this._states = [];\n    this._pointer = -1;\n  }\n\n  /**\n   * Replace all states.\n   */\n  public replace(newStates: IStateItem[]): void {\n    this._states = newStates;\n  }\n\n  /**\n   * Get state by index.\n   */\n  public get(index: number) {\n    return this._states[index];\n  }\n\n  /**\n   * Set state by index.\n   */\n  public set(i: number, state: IStateItem) {\n    return (this._states[i] = state);\n  }\n\n  /**\n   * Get the current state.\n   */\n  get current(): IStateItem {\n    return this._states[this._pointer];\n  }\n\n  /**\n   * Get the last state (top of the history stack).\n   */\n  get state(): IStateItem {\n    return this._states[this._states.length - 1];\n  }\n\n  /**\n   * Get the previous state.\n   */\n  get previous(): IStateItem | null {\n    return this._pointer < 1 ? null : this._states[this._pointer - 1];\n  }\n\n  /**\n   * Get the state size.\n   */\n  get size(): number {\n    return this._states.length;\n  }\n\n  /**\n   * Get the history action: push vs replace\n   */\n  private _getAction(trigger: Trigger): HistoryAction {\n    let action: HistoryAction = 'push';\n\n    // Manage `data-barba-history` attribute\n    // to get the right action (push vs replace).\n    const el = trigger as HTMLAnchorElement;\n    const attr = `${schemaAttribute.prefix}-${schemaAttribute.history}`;\n\n    if (el.hasAttribute && el.hasAttribute(attr)) {\n      action = el.getAttribute(attr) as HistoryAction;\n    }\n\n    return action;\n  }\n\n  /**\n   * Get the direction of popstate change\n   */\n  private _getDirection(diff: number): Trigger {\n    // Check if \"session switch\"\n    if (Math.abs(diff) > 1) {\n      // Ex 6-0 > 0 -> forward, 0-6 < 0 -> back\n      return diff > 0 ? 'forward' : 'back';\n    } else {\n      if (diff === 0) {\n        return 'popstate';\n      } else {\n        // Ex 6-5 > 0 -> back, 5-6 < 0 -> forward\n        return diff > 0 ? 'back' : 'forward';\n      }\n    }\n  }\n}\n\nconst history = new History();\n\nexport { history };\n", "/**\n * @barba/core/utils/helpers\n * <br><br>\n * ## Helpers\n *\n * - Update next page data\n *\n * @module core/utils/helpers\n * @preferred\n */\n\n/***/\n\n// Third-party\nimport ptr from 'path-to-regexp';\n// Definitions\nimport { ITransitionData } from '../defs';\n// Utils\nimport { dom } from './dom';\nimport { history } from './history';\n\n/**\n * Update `data.next`, the title and the history\n */\nexport const update = async (\n  page: Promise<string | void>,\n  data: ITransitionData\n): Promise<void> => {\n  // If not already updated\n  if (!data.next.html) {\n    const html = await page;\n    const { next } = data;\n\n    if (html) {\n      // see: https://github.com/barbajs/barba/issues/362\n      // const nextDocument = dom.toDocument(html);\n      const nextDocument = dom.toElement(html);\n\n      next.namespace = dom.getNamespace(nextDocument);\n      next.container = dom.getContainer(nextDocument);\n      // see https://github.com/barbajs/barba/issues/362\n      // next.html = dom.getHtml(nextDocument);\n      // next.html = nextDocument.innerHTML;\n      next.html = html;\n\n      // Update history namespace (not available when initially set)\n      history.update({ ns: next.namespace });\n\n      // Update title.\n      const { title } = dom.toDocument(html);\n\n      document.title = title;\n    }\n  }\n};\n\n/**\n * Next tick\n */\nexport const nextTick = () =>\n  new Promise(resolve => {\n    window.requestAnimationFrame(resolve);\n    // DEV: same result?\n    // setTimeout(resolve, 0);\n  });\n\n/**\n * Turn a route string such as `/user/:name` into a regular expression.\n *\n * Used for:\n *\n * - routes to ignore\n * - route transition resolution\n *\n * @see https://www.npmjs.com/package/path-to-regexp\n */\nconst pathToRegexp = ptr;\n\nexport { pathToRegexp };\n", "/**\n * @barba/core/utils/url\n * <br><br>\n * ## URL utils.\n *\n * - Collect and structure informations from URLs\n *\n * @module core/utils/url\n */\n\n/***/\n\n// Definitions\nimport { IGenericObject, IUrlBase } from '../defs';\n\n/**\n * Get location href.\n */\nexport const getHref = () => window.location.href;\n\n/**\n * Get location origin.\n */\nexport const getOrigin = () => window.location.origin;\n\n/**\n * Get port based on URL or location.\n */\nexport const getPort = (url: string = window.location.href) => parse(url).port;\n\n/**\n * Get path from URL.\n */\nexport const getPath = (url: string = window.location.href) => parse(url).path;\n\n/**\n * Get query object from URL.\n */\n// export const getQuery = (url: string): IGenericObject => parse(url).query;\n\n/**\n * Get hash from URL.\n */\n// export const getHash = (url: string): string => parse(url).hash;\n\n/**\n * Parse URL for path, query and hash and more.\n */\nexport const parse = (url: string): IUrlBase => {\n  // Port\n  let port;\n  const matches = url.match(/:\\d+/);\n\n  if (matches === null) {\n    if (/^http/.test(url)) {\n      port = 80;\n    }\n\n    if (/^https/.test(url)) {\n      port = 443;\n    }\n  } else {\n    const portString = matches[0].substring(1);\n\n    port = parseInt(portString, 10);\n  }\n\n  // Path\n  let path = url.replace(getOrigin(), '');\n  let hash;\n  let query = {};\n\n  // Hash\n  const hashIndex = path.indexOf('#');\n\n  if (hashIndex >= 0) {\n    hash = path.slice(hashIndex + 1);\n    path = path.slice(0, hashIndex);\n  }\n\n  // Query\n  const queryIndex = path.indexOf('?');\n\n  if (queryIndex >= 0) {\n    query = parseQuery(path.slice(queryIndex + 1));\n    path = path.slice(0, queryIndex);\n  }\n\n  return {\n    hash,\n    path,\n    port,\n    query,\n  };\n};\n\n/**\n * Parse a query string to object.\n */\nexport const parseQuery = (str: string) =>\n  str.split('&').reduce((acc: IGenericObject, el: string) => {\n    const [key, value] = el.split('=');\n\n    acc[key] = value;\n\n    return acc;\n  }, {});\n\n/**\n * Clean URL, remove \"hash\" and/or \"trailing slash\".\n */\nexport const clean = (url: string = window.location.href) =>\n  url.replace(/(\\/#.*|\\/|#.*)$/, '');\n", "/**\n * @barba/core/utils/request\n * <br><br>\n * ## Fetch pages for transitions.\n *\n * - Includes timeout\n * - Uses Fetch API\n * - Handles errors\n *\n * @module core/utils/request\n * @preferred\n */\n\n/***/\n\n// Definitions\nimport { RequestError } from '../defs';\n\n/**\n * Init a page request.\n * Fetch the page and returns a promise with the text content.\n */\nfunction request(\n  url: string,\n  ttl: number = 2e3,\n  requestError: RequestError\n): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest();\n\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState === XMLHttpRequest.DONE) {\n        if (xhr.status === 200) {\n          resolve(xhr.responseText);\n        } else if (xhr.status) {\n          // HTTP code is not 200, reject with response.\n          const res = {\n            status: xhr.status,\n            statusText: xhr.statusText,\n          };\n          requestError(url, res);\n          reject(res);\n        }\n      }\n    };\n    xhr.ontimeout = () => {\n      const err = new Error(`Timeout error [${ttl}]`);\n      requestError(url, err);\n      reject(err);\n    };\n    xhr.onerror = () => {\n      const err = new Error(`Fetch error`);\n      requestError(url, err);\n      reject(err);\n    };\n\n    xhr.open('GET', url);\n    xhr.timeout = ttl;\n    xhr.setRequestHeader(\n      'Accept',\n      'text/html,application/xhtml+xml,application/xml'\n    );\n    xhr.setRequestHeader('x-barba', 'yes');\n    xhr.send();\n  });\n}\n\nexport { request };\n", "module.exports = isPromise;\n\nfunction isPromise(obj) {\n  return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';\n}\n", "import isPromise from 'is-promise';\n\n// https://github.com/SBoudrias/run-async\n/* istanbul ignore next */\nexport function runAsync(\n  func: (...args: any[]) => void | Promise<any>,\n  ctx: any = {}\n): (...args: any[]) => Promise<any> {\n  return (...args: any[]) => {\n    let async = false;\n\n    const promise = new Promise((resolve, reject) => {\n      // Add async to context\n      ctx.async = () => {\n        async = true;\n\n        return (err: any, value: any) => {\n          if (err) {\n            reject(err);\n          } else {\n            resolve(value);\n          }\n        };\n      };\n\n      const answer = func.apply(ctx, args as []);\n\n      if (!async) {\n        if (isPromise(answer)) {\n          (answer as Promise<any>).then(resolve, reject);\n        } else {\n          resolve(answer);\n        }\n      }\n    });\n\n    return promise;\n  };\n}\n", "/**\n * @barba/core/modules/hooks\n * <br><br>\n * ## Hooks manager.\n *\n * - Register and trigger hooks\n *\n * Hooks can be easily registered:\n *\n * ```js\n * hooks.leave(callback, context);\n * ```\n *\n * @module core/modules/hooks\n * @preferred\n */\n\n/***/\n\n// Definitions\nimport { HookFunction, HookMethods, HooksAll } from './defs';\n// Modules\nimport { Logger } from './modules/Logger';\n// Utils\nimport { runAsync } from './utils';\n// Types\ninterface IHookInfos {\n  ctx: any;\n  fn: HookFunction;\n}\n\nexport class Hooks extends HookMethods {\n  /**\n   * Allow the use of `hooks[name](cb, ctx)`.\n   */\n  [key: string]: any;\n  // [key in HooksAll]?: any;\n  public logger: Logger = new Logger('@barba/core');\n  /**\n   * All available hooks.\n   *\n   * See [[HooksAll]]\n   */\n  // TODO: get hooks from defs (DRY)?\n  public all: HooksAll[] = [\n    'ready',\n    'page',\n    'reset',\n    'currentAdded',\n    'currentRemoved',\n    'nextAdded',\n    'nextRemoved',\n    'beforeOnce',\n    'once',\n    'afterOnce',\n    'before',\n    'beforeLeave',\n    'leave',\n    'afterLeave',\n    'beforeEnter',\n    'enter',\n    'afterEnter',\n    'after',\n  ];\n  /**\n   * Registered hooks.\n   *\n   * - Unique hook name\n   * - Associated data set(s) (callback + context)\n   */\n  public registered: Map<HooksAll, Set<IHookInfos>> = new Map();\n\n  constructor() {\n    super();\n    this.init();\n  }\n\n  public init() {\n    this.registered.clear();\n    this.all.forEach(hook => {\n      if (!this[hook]) {\n        this[hook] = (fn: HookFunction, ctx?: any) => {\n          if (!this.registered.has(hook)) {\n            this.registered.set(hook, new Set());\n          }\n          const set = this.registered.get(hook);\n\n          set.add({\n            ctx: ctx || {},\n            fn,\n          });\n        };\n      }\n    });\n  }\n\n  /**\n   * Do hook.\n   *\n   * Trigger registered hooks.\n   */\n  public do(name: HooksAll, ...args: any): Promise<any> {\n    if (this.registered.has(name)) {\n      // Let's start a chain of promises\n      let chain = Promise.resolve();\n\n      this.registered.get(name).forEach(hook => {\n        // Chain async hooks promisified\n        chain = chain.then(() => runAsync(hook.fn, hook.ctx)(...args));\n      });\n\n      return chain.catch(error => {\n        this.logger.debug(`Hook error [${name}]`);\n        this.logger.error(error);\n      });\n    }\n\n    return Promise.resolve();\n  }\n\n  public clear(): void {\n    this.all.forEach(hook => {\n      delete this[hook];\n    });\n\n    this.init();\n  }\n\n  /**\n   * Help, print available and registered hooks.\n   */\n  public help(): void {\n    this.logger.info(`Available hooks: ${this.all.join(',')}`);\n    const registered: string[] = [];\n    this.registered.forEach((value, key) => registered.push(key));\n    this.logger.info(`Registered hooks: ${registered.join(',')}`);\n  }\n}\n\nconst hooks = new Hooks();\n\nexport { hooks };\n", "/**\n * @barba/core/modules/ignore\n * <br><br>\n * ## Manage ignore options.\n *\n * - cache\n * - prefetch\n *\n * @module core/modules/ignore\n * @preferred\n */\n\n/***/\n\n// Definitions\nimport { IgnoreOption } from '../defs';\n// Utils\nimport { pathToRegexp } from '../utils/helpers';\nimport { parse } from '../utils/url';\n\nexport class Ignore {\n  private _ignoreAll: boolean;\n  private _ignoreRegexes: RegExp[] = [];\n\n  constructor(ignore: IgnoreOption) {\n    if (typeof ignore === 'boolean') {\n      this._ignoreAll = ignore;\n    } else {\n      const paths = Array.isArray(ignore) ? ignore : [ignore];\n\n      this._ignoreRegexes = paths.map(p => pathToRegexp(p));\n    }\n  }\n\n  public checkHref(href: string): boolean {\n    if (typeof this._ignoreAll === 'boolean') {\n      return this._ignoreAll;\n    }\n\n    const { path } = parse(href);\n\n    return this._ignoreRegexes.some(regex => regex.exec(path) !== null);\n  }\n}\n", "/**\n * @barba/core/modules/cache\n * <br><br>\n * ## Cache for storing URL / HTML.\n *\n * @module core/modules/cache\n * @preferred\n */\n\n/***/\n\n// Definitions\nimport { CacheAction, CacheRequest, ICacheData, IgnoreOption } from '../defs';\n// Modules\nimport { Ignore } from './Ignore';\n\nexport class Cache extends Ignore {\n  private _state: Map<string, ICacheData> = new Map();\n\n  constructor(ignore: IgnoreOption) {\n    super(ignore);\n  }\n\n  /**\n   * Set value to cache\n   */\n  public set(\n    href: string,\n    request: CacheRequest,\n    action: CacheAction\n  ): ICacheData {\n    this._state.set(href, {\n      action,\n      request,\n    });\n\n    return {\n      action,\n      request,\n    };\n  }\n\n  /**\n   * Get data from cache\n   */\n  public get(href: string): ICacheData {\n    return this._state.get(href);\n  }\n\n  /**\n   * Get request from cache\n   */\n  public getRequest(href: string): CacheRequest {\n    return this._state.get(href).request;\n  }\n\n  /**\n   * Get action from cache\n   */\n  public getAction(href: string): CacheAction {\n    return this._state.get(href).action;\n  }\n\n  /**\n   * Check if value exists into cache\n   */\n  public has(href: string): boolean {\n    /* istanbul ignore else */\n    if (this.checkHref(href)) {\n      return false;\n    }\n    return this._state.has(href);\n  }\n\n  /**\n   * Delete value from cache\n   */\n  public delete(href: string): boolean {\n    return this._state.delete(href);\n  }\n\n  /**\n   * Update cache value\n   */\n  public update(href: string, data: ICacheData): ICacheData {\n    const state = {\n      ...this._state.get(href),\n      ...data,\n    };\n    this._state.set(href, state);\n\n    return state;\n  }\n}\n", "/**\n * @barba/core/modules/prevent\n * <br><br>\n * ## Prevent checks.\n *\n * - Gathers all the tests that allow Barba to work and play transitions\n *\n * @module core/modules/prevent\n * @preferred\n */\n\n/***/\n\n// Definitions\nimport { IgnoreOption, Link, PreventCheck } from '../defs';\n// Schemas\nimport { schemaAttribute } from '../schemas/attribute';\n// Utils\nimport { url } from '../utils';\n// Modules\nimport { Ignore } from './Ignore';\n\n/**\n * Make sure the browser supports `history.pushState`.\n */\nconst pushState: PreventCheck = () => !window.history.pushState;\n\n/**\n * Make sure there is an `el` and `href`.\n */\nconst exists: PreventCheck = ({ el, href }) => !el || !href;\n\n/**\n * If the user is pressing ctrl + click, the browser will open a new tab.\n */\nconst newTab: PreventCheck = ({ event }) =>\n  (event as KeyboardEvent).which > 1 ||\n  (event as KeyboardEvent).metaKey ||\n  (event as KeyboardEvent).ctrlKey ||\n  (event as KeyboardEvent).shiftKey ||\n  (event as KeyboardEvent).altKey;\n\n/**\n * If the link has `_blank` target.\n */\nconst blank: PreventCheck = ({ el }) =>\n  el.hasAttribute('target') && (el as Link).target === '_blank';\n\n/**\n * If the domain is the same (in order to avoid pushState cross origin security problem).\n * Note: SVGAElement do not have `protocol` neither `hostname` properties.\n */\nconst corsDomain: PreventCheck = ({ el }) =>\n  ((el as HTMLAnchorElement).protocol !== undefined &&\n    window.location.protocol !== (el as HTMLAnchorElement).protocol) ||\n  ((el as HTMLAnchorElement).hostname !== undefined &&\n    window.location.hostname !== (el as HTMLAnchorElement).hostname);\n\n/**\n * If the port is the same.\n * Note: SVGAElement do not have `port` property.\n */\nconst corsPort: PreventCheck = ({ el }) =>\n  (el as HTMLAnchorElement).port !== undefined &&\n  url.getPort() !== url.getPort((el as HTMLAnchorElement).href);\n\n/**\n * If the link has download attribute.\n */\nconst download: PreventCheck = ({ el }) =>\n  el.getAttribute && typeof el.getAttribute('download') === 'string';\n\n/**\n * If the links contains [data-barba-prevent] or [data-barba-prevent=\"self\"].\n */\nconst preventSelf: PreventCheck = ({ el }) =>\n  el.hasAttribute(`${schemaAttribute.prefix}-${schemaAttribute.prevent}`);\n\n/**\n * If some link ancestor contains [data-barba-prevent=\"all\"].\n */\nconst preventAll: PreventCheck = ({ el }) =>\n  Boolean(\n    el.closest(`[${schemaAttribute.prefix}-${schemaAttribute.prevent}=\"all\"]`)\n  );\n\n/**\n * If the link is the current URL.\n *\n * > Not in the test suite.\n */\nconst sameUrl: PreventCheck = ({ href }) =>\n  url.clean(href) === url.clean() && url.getPort(href) === url.getPort();\n\nexport class Prevent extends Ignore {\n  public suite: string[] = [];\n  public tests: Map<string, PreventCheck> = new Map();\n\n  constructor(ignore: IgnoreOption) {\n    super(ignore);\n    this.init();\n  }\n\n  public init(): void {\n    // Add defaults\n    this.add('pushState', pushState);\n    this.add('exists', exists);\n    this.add('newTab', newTab);\n    this.add('blank', blank);\n    this.add('corsDomain', corsDomain);\n    this.add('corsPort', corsPort);\n    this.add('download', download);\n    this.add('preventSelf', preventSelf);\n    this.add('preventAll', preventAll);\n\n    // Outside of the test suite\n    this.add('sameUrl', sameUrl, false);\n  }\n\n  public add(name: string, check: PreventCheck, suite: boolean = true): void {\n    this.tests.set(name, check);\n    suite && this.suite.push(name);\n  }\n\n  /**\n   * Run individual test\n   */\n  public run(name: string, el: Link, event: Event, href: string): boolean {\n    return this.tests.get(name)({\n      el,\n      event,\n      href,\n    });\n  }\n\n  /**\n   * Run test suite\n   */\n  public checkLink(el: Link, event: Event, href: string): boolean {\n    return this.suite.some(name => this.run(name, el, event, href));\n  }\n}\n", "// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error\nexport class BarbaError extends Error {\n  /* istanbul ignore next */\n  constructor(\n    public error: Error,\n    public label = 'Barba error',\n    ...params: any[]\n  ) {\n    // Pass remaining arguments (including vendor specific ones) to parent constructor\n    super(...params);\n\n    // Maintains proper stack trace for where our error was thrown (only available on V8)\n    /* istanbul ignore else */\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, BarbaError);\n    }\n\n    this.name = 'BarbaError';\n  }\n}\n", "/**\n * @barba/core/modules/store\n * <br><br>\n * ## Transitions store.\n *\n * - Resolve transition\n * - Manage rules\n *\n * @module core/modules/store\n * @preferred\n */\n\n/***/\n\n// Definitions\nimport {\n  IRule,\n  IRules,\n  ITransitionData,\n  ITransitionFilters,\n  ITransitionOnce,\n  ITransitionPage,\n  RuleName,\n} from '../defs';\n\n// Modules\nimport { Logger } from './Logger';\n\nexport class Store {\n  public logger: Logger = new Logger('@barba/core');\n  /**\n   * All registered transitions.\n   */\n  public all: ITransitionPage[] = [];\n  /**\n   * \"Page only\" registered transitions.\n   */\n  public page: ITransitionPage[] = [];\n  /**\n   * \"Once only\" registered transitions.\n   */\n  public once: ITransitionOnce[] = [];\n  /**\n   * Rules for transition resolution.\n   *\n   * Defaults:\n   *\n   * - namespace\n   * - custom\n   */\n  private _rules: IRule[] = [\n    {\n      name: 'namespace',\n      type: 'strings',\n    },\n    {\n      name: 'custom',\n      type: 'function',\n    },\n  ];\n\n  /**\n   * Init store.\n   */\n  constructor(transitions: ITransitionPage[] = []) {\n    /* istanbul ignore else */\n    if (transitions) {\n      // TODO: add check for valid transitions? criteria? (once || enter && leave)\n      this.all = this.all.concat(transitions);\n    }\n    this.update();\n  }\n\n  /**\n   * Add rule or transition.\n   */\n  public add(type: 'rule' | 'transition', data: any): void {\n    switch (type) {\n      case 'rule':\n        // TODO: check for valid rule\n        this._rules.splice(data.position || 0, 0, data.value);\n        break;\n      case 'transition':\n      default:\n        // TODO: check for valid transition\n        this.all.push(data);\n        break;\n    }\n\n    this.update();\n  }\n\n  /**\n   * Resolve transition.\n   */\n  public resolve(\n    data: ITransitionData,\n    filters: ITransitionFilters = {}\n  ): ITransitionOnce | ITransitionPage {\n    // Filter on \"once\"\n    let transitions = filters.once ? this.once : this.page;\n\n    // Filter on \"self\"\n    if (filters.self) {\n      transitions = transitions.filter(t => t.name && t.name === 'self');\n    } else {\n      transitions = transitions.filter(t => !t.name || t.name !== 'self');\n    }\n\n    // All matching transition infos\n    const matching = new Map();\n\n    // Active = first of valid transitions\n    // sorted by directions (from/to, from || to, …)\n    const active = transitions.find(t => {\n      let valid = true;\n      const match = {};\n\n      if (filters.self && t.name === 'self') {\n        return true;\n      }\n\n      // Check rules\n      this._rules.reverse().forEach(rule => {\n        if (valid) {\n          valid = this._check(t, rule, data, match);\n          // From/to check\n          if (t.from && t.to) {\n            valid =\n              this._check(t, rule, data, match, 'from') &&\n              this._check(t, rule, data, match, 'to');\n          }\n          if (t.from && !t.to) {\n            valid = this._check(t, rule, data, match, 'from');\n          }\n          if (!t.from && t.to) {\n            valid = this._check(t, rule, data, match, 'to');\n          }\n        }\n      });\n\n      matching.set(t, match);\n\n      return valid;\n    });\n\n    const activeMatch = matching.get(active);\n    const transitionType = [];\n    if (filters.once) {\n      transitionType.push('once');\n    } else {\n      transitionType.push('page');\n    }\n    if (filters.self) {\n      transitionType.push('self');\n    }\n\n    if (activeMatch) {\n      // Log resolved transition\n      const infos: any[] = [active];\n      // Log if matching criteria\n      Object.keys(activeMatch).length > 0 && infos.push(activeMatch);\n\n      this.logger.info(\n        `Transition found [${transitionType.join(',')}]`,\n        ...infos\n      );\n    } else {\n      this.logger.info(`No transition found [${transitionType.join(',')}]`);\n    }\n\n    return active;\n  }\n\n  /**\n   * ### Update store.\n   *\n   * - Reorder transition by priorities\n   * - Get wait indicator\n   * - Get once transitions\n   */\n  public update(): void {\n    // Reorder by priorities\n    this.all = this.all\n      .map(t => this._addPriority(t))\n      .sort((a, b) => a.priority - b.priority)\n      .reverse()\n      .map(t => {\n        delete t.priority;\n\n        return t;\n      });\n    this.page = this.all.filter(\n      t => t.leave !== undefined || t.enter !== undefined\n    ) as ITransitionPage[];\n    this.once = this.all.filter(t => t.once !== undefined) as ITransitionOnce[];\n  }\n\n  /**\n   * ### Check if transition apply.\n   *\n   * Based on rule, page data and optional direction:\n   *\n   * 1. transition has no rule \"property\":\n   *    - always returns true\n   * 2. transition has rule \"property\":\n   *     - \"strings\" should be present on both side (transition + page) and match\n   *     - \"function\" should return true\n   */\n  private _check(\n    transition: ITransitionPage,\n    rule: IRule,\n    data: ITransitionData,\n    match: any,\n    direction?: 'from' | 'to'\n  ): boolean {\n    let isValid = true;\n    let hasMatch = false;\n    const t = transition;\n    const { name, type } = rule;\n    const strRule = name as IRules['strings'];\n    const objRule = name as IRules['object'];\n    const fnName = name as IRules['function'];\n    const base = direction ? t[direction] : t; // = t || t.from || t.to\n    const page = direction === 'to' ? data.next : data.current; // = current || next\n    const exist = direction ? base && base[name] : base[name];\n\n    // If transition rule exists\n    if (exist) {\n      switch (type) {\n        case 'strings':\n        default: {\n          // Array support\n          const names: string[] = Array.isArray(base[strRule])\n            ? (base[strRule] as string[])\n            : [base[strRule] as string];\n\n          // For matching, prop should be present on both sides and match\n          if (page[strRule] && names.indexOf(page[strRule]) !== -1) {\n            hasMatch = true;\n          }\n          // If transition prop is different from current, not valid\n          if (names.indexOf(page[strRule]) === -1) {\n            isValid = false;\n          }\n          break;\n        }\n\n        case 'object': {\n          // Array support\n          const names: string[] = Array.isArray(base[objRule])\n            ? (base[objRule] as string[])\n            : [base[objRule] as string];\n\n          // For matching, prop should be present on both sides and match\n          if (page[objRule]) {\n            if (\n              page[objRule].name &&\n              names.indexOf(page[objRule].name) !== -1\n            ) {\n              hasMatch = true;\n            }\n            // If transition prop is different from current, not valid\n            if (names.indexOf(page[objRule].name) === -1) {\n              isValid = false;\n            }\n          } else {\n            isValid = false;\n          }\n          break;\n        }\n\n        case 'function':\n          if (base[fnName](data)) {\n            hasMatch = true;\n          } else {\n            isValid = false;\n          }\n          break;\n      }\n\n      if (hasMatch) {\n        if (direction) {\n          match[direction] = match[direction] || {};\n          match[direction][name] = t[direction][name];\n        } else {\n          match[name] = t[name];\n        }\n      }\n    }\n\n    return isValid;\n  }\n\n  /**\n   * ### Calculate transition priority.\n   *\n   * Based on:\n   *\n   * - rule \"position\" (index) give tens, hundreds, thousands, …\n   * - from/to properties give units (0, 1 or 2)\n   */\n  private _calculatePriority(\n    t: ITransitionPage,\n    ruleName: RuleName,\n    ruleIndex: number\n  ): number {\n    let priority = 0;\n\n    if (\n      t[ruleName] ||\n      (t.from && t.from[ruleName]) ||\n      (t.to && t.to[ruleName])\n    ) {\n      priority += Math.pow(10, ruleIndex);\n\n      if (t.from && t.from[ruleName]) {\n        priority += 1;\n      }\n      if (t.to && t.to[ruleName]) {\n        priority += 2;\n      }\n    }\n\n    return priority;\n  }\n\n  private _addPriority(t: ITransitionPage): ITransitionPage {\n    t.priority = 0;\n    let priority = 0;\n\n    this._rules.forEach((rule, i) => {\n      const { name } = rule;\n      const index = i + 1;\n\n      priority += this._calculatePriority(t, name, index);\n    });\n\n    t.priority = priority;\n\n    return t;\n  }\n}\n", "/**\n * @barba/core/modules/transitions\n * <br><br>\n * ## Transitions manager.\n *\n * - Handle hooks and transition lifecycle\n *\n * @module core/modules/transitions\n * @preferred\n */\n\n/***/\n\n// Definitions\nimport {\n  HooksTransition,\n  HooksTransitionMap,\n  ITransitionData,\n  ITransitionFilters,\n  ITransitionOnce,\n  ITransitionPage,\n  Wrapper,\n} from '../defs';\n// Hooks\nimport { hooks } from '../hooks';\n// Utils\nimport { dom, helpers, runAsync } from '../utils';\n// Modules\nimport { BarbaError } from './Error';\nimport { Logger } from './Logger';\nimport { Store } from './Store';\n\nexport class Transitions {\n  public logger: Logger = new Logger('@barba/core');\n  public store: Store;\n  private _running: boolean = false;\n\n  constructor(transitions: ITransitionPage[] = []) {\n    this.store = new Store(transitions);\n  }\n\n  /**\n   * Get resolved transition\n   *\n   * - based on data\n   */\n  public get(\n    data: ITransitionData,\n    filters?: ITransitionFilters\n  ): ITransitionOnce | ITransitionPage {\n    return this.store.resolve(data, filters);\n  }\n\n  /**\n   * Animation running status.\n   */\n  get isRunning(): boolean {\n    return this._running;\n  }\n  set isRunning(status: boolean) {\n    this._running = status;\n  }\n\n  /**\n   * Check for registered once transition(s).\n   */\n  get hasOnce(): boolean {\n    return this.store.once.length > 0;\n  }\n\n  /**\n   * Check for registered self transition.\n   */\n  get hasSelf(): boolean {\n    return this.store.all.some(t => t.name === 'self');\n  }\n\n  /**\n   * ### Wait indicator.\n   *\n   * Tells Barba to get next page data<br>\n   * before starting the resolution<br>\n   * because some registered transitions need<br>\n   * next page data to be resolved (eg: `sync: true`, `to: { namespace }`, …)\n   */\n  get shouldWait(): boolean {\n    return this.store.all.some(t => (t.to && !t.to.route) || t.sync);\n  }\n\n  /**\n   * ### Do \"once\" transition.\n   *\n   * Hooks: see [[HooksOnce]].\n   */\n  public async doOnce({\n    data,\n    transition,\n  }: {\n    data: ITransitionData;\n    transition: ITransitionOnce;\n  }) {\n    const t = transition || {};\n    this._running = true;\n\n    try {\n      await this._doAsyncHook('beforeOnce', data, t);\n      await this.once(data, t);\n      await this._doAsyncHook('afterOnce', data, t);\n    } catch (error) {\n      this._running = false;\n\n      this.logger.debug('Transition error [before/after/once]');\n      this.logger.error(error);\n    }\n\n    this._running = false;\n  }\n\n  /**\n   * ### Do \"page\" transition.\n   *\n   * Hooks: see [[HooksPage]].\n   *\n   * `sync: false` (default) order:\n   *\n   * 1. before\n   * 2. beforeLeave\n   * 3. leave\n   * 4. afterLeave\n   * 5. beforeEnter\n   * 6. enter\n   * 7. afterEnter\n   * 8. after\n   *\n   * `sync: true` order:\n   *\n   * 1. before\n   * 2. beforeLeave\n   * 3. beforeEnter\n   * 4. leave & enter\n   * 5. afterLeave\n   * 6. afterEnter\n   * 7. after\n   */\n  public async doPage({\n    data,\n    transition,\n    page,\n    wrapper,\n  }: {\n    data: ITransitionData;\n    transition: ITransitionPage;\n    page: Promise<string | void>;\n    wrapper: Wrapper;\n  }) {\n    const t = transition || {};\n    const sync = t.sync === true || false;\n\n    this._running = true;\n\n    try {\n      // Check sync mode, wait for next content\n      if (sync) {\n        await helpers.update(page, data);\n      }\n\n      await this._doAsyncHook('before', data, t);\n\n      if (sync) {\n        try {\n          await this.add(data, wrapper);\n          // Before actions\n          await this._doAsyncHook('beforeLeave', data, t);\n          await this._doAsyncHook('beforeEnter', data, t);\n\n          // Actions\n          await Promise.all([this.leave(data, t), this.enter(data, t)]);\n\n          // After actions\n          await this._doAsyncHook('afterLeave', data, t);\n          await this._doAsyncHook('afterEnter', data, t);\n        } catch (error) {\n          // this.logger.debug('Transition error [sync]');\n          // this.logger.error(error);\n          if (this._isTransitionError(error)) {\n            throw new BarbaError(error, 'Transition error [sync]');\n          }\n        }\n      } else {\n        let leaveResult: any = false;\n\n        try {\n          // Leave\n          await this._doAsyncHook('beforeLeave', data, t);\n\n          leaveResult = await Promise.all([\n            this.leave(data, t),\n            helpers.update(page, data),\n          ]).then(values => values[0]);\n\n          await this._doAsyncHook('afterLeave', data, t);\n\n          // TODO: check here \"valid\" page result\n          // before going further\n        } catch (error) {\n          // this.logger.debug('Transition error [before/after/leave]');\n          // this.logger.error(error);\n          if (this._isTransitionError(error)) {\n            throw new BarbaError(\n              error,\n              'Transition error [before/after/leave]'\n            );\n          }\n        }\n\n        try {\n          // Enter\n          /* istanbul ignore else */\n          if (leaveResult !== false) {\n            await this.add(data, wrapper);\n\n            await this._doAsyncHook('beforeEnter', data, t);\n            await this.enter(data, t, leaveResult);\n            await this._doAsyncHook('afterEnter', data, t);\n          }\n        } catch (error) {\n          // this.logger.debug('Transition error [before/after/enter]');\n          // this.logger.error(error);\n          if (this._isTransitionError(error)) {\n            throw new BarbaError(\n              error,\n              'Transition error [before/after/enter]'\n            );\n          }\n        }\n      }\n\n      // Remove current contaienr\n      await this.remove(data);\n\n      await this._doAsyncHook('after', data, t);\n    } catch (error) {\n      this._running = false;\n\n      // If \"custom/specific\" barba error.\n      /* istanbul ignore else */\n      if (error.name && error.name === 'BarbaError') {\n        this.logger.debug(error.label);\n        this.logger.error(error.error);\n\n        throw error;\n      }\n\n      this.logger.debug('Transition error [page]');\n      this.logger.error(error);\n\n      throw error;\n    }\n\n    this._running = false;\n  }\n\n  /**\n   * Once hook + async \"once\" transition.\n   */\n  public async once(data: ITransitionData, t: ITransitionOnce): Promise<void> {\n    await hooks.do('once', data, t);\n\n    return t.once ? runAsync(t.once, t)(data) : Promise.resolve();\n  }\n\n  /**\n   * Leave hook + async \"leave\" transition.\n   */\n  public async leave(data: ITransitionData, t: ITransitionPage): Promise<any> {\n    await hooks.do('leave', data, t);\n\n    return t.leave ? runAsync(t.leave, t)(data) : Promise.resolve();\n  }\n\n  /**\n   * Enter hook + async \"enter\" transition.\n   */\n  public async enter(\n    data: ITransitionData,\n    t: ITransitionPage,\n    leaveResult?: any\n  ): Promise<void> {\n    await hooks.do('enter', data, t);\n\n    return t.enter\n      ? runAsync(t.enter, t)(data, leaveResult)\n      : Promise.resolve();\n  }\n\n  /**\n   * Add next container.\n   */\n  public async add(data: ITransitionData, wrapper: Wrapper): Promise<void> {\n    dom.addContainer(data.next.container, wrapper);\n    hooks.do('nextAdded', data);\n  }\n\n  /**\n   * Remove current container.\n   */\n  public async remove(data: ITransitionData): Promise<void> {\n    dom.removeContainer(data.current.container);\n    hooks.do('currentRemoved', data);\n  }\n\n  private _isTransitionError(error: any) {\n    if (error.message) {\n      // Errors from request\n      return !/Timeout error|Fetch error/.test(error.message);\n    }\n\n    if (error.status) {\n      // Errors from request\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Do hooks + async transition methods.\n   */\n  private async _doAsyncHook(\n    hook: HooksTransition,\n    data: ITransitionData,\n    t: HooksTransitionMap\n  ): Promise<void> {\n    await hooks.do(hook, data, t);\n\n    return t[hook] ? runAsync(t[hook], t)(data) : Promise.resolve();\n  }\n}\n", "/**\n * @barba/core/modules/views\n * <br><br>\n * ## Views manager.\n *\n * @module core/modules/views\n * @preferred\n */\n\n/***/\n\n// Definitions\nimport { HooksView, IView, IViewData } from '../defs';\n// Hooks\nimport { hooks } from '../hooks';\n// Utils\nimport { runAsync } from '../utils';\n// Types\ntype Hook = (data: IViewData) => Promise<void>;\n\nexport class Views {\n  /**\n   * Available hook names for views.\n   */\n  public names: HooksView[] = [\n    'beforeLeave',\n    'afterLeave',\n    'beforeEnter',\n    'afterEnter',\n  ];\n  /**\n   * Registered views by namespace.\n   */\n  public byNamespace: Map<string, IView> = new Map();\n\n  /**\n   * Init views.\n   */\n  constructor(views: IView[]) {\n    if (views.length === 0) {\n      return;\n    }\n\n    // TODO: add check\n    // for valid views? criteria? (namespace property, string ?)\n    // or duplicate\n    views.forEach(view => {\n      this.byNamespace.set(view.namespace, view);\n    });\n\n    this.names.forEach(name => {\n      hooks[name](this._createHook(name));\n    });\n  }\n\n  /**\n   * Create the hook method.\n   *\n   * - get view based on namespace\n   * - execute callback with transition data\n   */\n  private _createHook(name: HooksView): Hook {\n    return data => {\n      const { namespace } = name.match(/enter/i) ? data.next : data.current;\n      const view = this.byNamespace.get(namespace);\n\n      // TODO: manage self…\n      // if (view && data.trigger !== 'self') {\n      if (view && view[name]) {\n        return runAsync(view[name], view)(data);\n      }\n\n      return Promise.resolve();\n    };\n  }\n}\n", "// Element.prototype.matches polyfill\n// https://developer.mozilla.org/en-US/docs/Web/API/Element/matches#Polyfill\nif (!Element.prototype.matches) {\n  Element.prototype.matches =\n    (Element as any).prototype.msMatchesSelector ||\n    Element.prototype.webkitMatchesSelector;\n}\n\n// Element.prototype.closest polyfill\n// https://developer.mozilla.org/en-US/docs/Web/API/Element/closest#Polyfill\nif (!Element.prototype.closest) {\n  Element.prototype.closest = function closest(s: string) {\n    let el = this;\n\n    do {\n      if (el.matches(s)) {\n        return el;\n      }\n\n      el = (el.parentElement || el.parentNode) as Element;\n    } while (el !== null && el.nodeType === 1);\n\n    return null;\n  };\n}\n", "/**\n * @module core/schemas\n */\n\n// Definitions\nimport { ISchemaPage } from '../defs';\n\n/**\n * See [[ISchemaPage]]\n */\nexport const schemaPage: ISchemaPage = {\n  container: null,\n  html: '',\n  namespace: '',\n  url: {\n    hash: '',\n    href: '',\n    path: '',\n    port: null,\n    query: {},\n  },\n};\n", "/**\n * @barba/core\n * <br><br>\n * ## Barba core object\n *\n * Main methods:\n *\n * - `.init()` for initialization with options\n * - `.use()` for plugins\n *\n * @module core\n */\n\n/***/\n\nimport { version } from '../package.json';\n// Definitions\nimport {\n  IBarbaOptions,\n  IBarbaPlugin,\n  IgnoreOption,\n  ISchemaPage,\n  ITransitionData,\n  ITransitionOnce,\n  ITransitionPage,\n  Link,\n  LinkEvent,\n  RequestCustomError,\n  RequestErrorOrResponse,\n  SchemaAttributeValues,\n  Trigger,\n  Wrapper,\n} from './defs';\n// Hooks\nimport { hooks } from './hooks';\n// Modules\nimport { Cache } from './modules/Cache';\nimport { Logger } from './modules/Logger';\nimport { Prevent } from './modules/Prevent';\nimport { Transitions } from './modules/Transitions';\nimport { Views } from './modules/Views';\n// Polyfills\nimport './polyfills';\n// Schemas\nimport { schemaAttribute } from './schemas/attribute';\nimport { schemaPage } from './schemas/page';\n// Utils\nimport { dom, helpers, history, request, url } from './utils';\n\nexport class Core {\n  /**\n   * Version.\n   */\n  public version: string = version;\n  /**\n   * Schemas.\n   */\n  public schemaPage: ISchemaPage = schemaPage;\n  /**\n   * Logger class, allows plugins to create Logger.\n   */\n  public Logger: typeof Logger = Logger;\n  /**\n   * Barba logger.\n   */\n  public logger: Logger = new Logger('@barba/core');\n  /**\n   * Plugins.\n   */\n  public plugins: Array<IBarbaPlugin<any>> = [];\n  /**\n   * Options\n   */\n  public timeout: number;\n  public cacheIgnore: IgnoreOption;\n  public prefetchIgnore: IgnoreOption;\n  public preventRunning: boolean;\n  /**\n   * Hooks\n   */\n  public hooks = hooks;\n  /**\n   * Modules.\n   */\n  // public history: History;\n  public cache: Cache;\n  public prevent: Prevent;\n  public transitions: Transitions;\n  public views: Views;\n  /**\n   * Utils.\n   */\n  public dom = dom;\n  public helpers = helpers;\n  public history = history;\n  public request = request;\n  public url = url;\n\n  private _data: ITransitionData;\n  private _requestCustomError: RequestCustomError;\n  private _wrapper: Wrapper;\n\n  /**\n   * ### Init plugin with options.\n   *\n   * See [[IBarbaPlugin]] for more details.\n   */\n  public use<T>(plugin: IBarbaPlugin<T>, options?: T): void {\n    const installedPlugins = this.plugins;\n\n    // Plugin installation\n    if (installedPlugins.indexOf(plugin) > -1) {\n      this.logger.warn(`Plugin [${plugin.name}] already installed.`);\n\n      return;\n    }\n\n    if (typeof plugin.install !== 'function') {\n      this.logger.warn(`Plugin [${plugin.name}] has no \"install\" method.`);\n\n      return;\n    }\n\n    plugin.install(this, options);\n    installedPlugins.push(plugin);\n  }\n\n  /**\n   * ### Init barba with options.\n   *\n   * See [[IBarbaOptions]] for more details.\n   *\n   * Default values are:\n   *\n   * - transitions: `[]`\n   * - views: `[]`\n   * - schema: [[SchemaAttribute]]\n   * - timeout: `2e3`\n   * - cacheIgnore: `false`\n   * - prefetchIgnore: `false`\n   * - preventRunning: `false`\n   * - prevent: `null`,\n   * - debug: `false`\n   * - logLevel: `'debug'`\n   */\n  public init(\n    /** @ignore */ {\n      transitions = [],\n      views = [],\n      schema = schemaAttribute,\n      requestError,\n      timeout = 2e3,\n      cacheIgnore = false,\n      prefetchIgnore = false,\n      /* istanbul ignore next */\n      preventRunning = false,\n      prevent: preventCustom = null,\n      debug = false,\n      logLevel = 'off',\n    }: IBarbaOptions = {}\n  ) {\n    // 0. Set logger level and print version\n    Logger.setLevel(debug === true ? 'debug' : logLevel);\n    this.logger.info(this.version);\n\n    // 1. Manage options\n    Object.keys(schema).forEach(k => {\n      const attr = k as SchemaAttributeValues;\n\n      /* istanbul ignore else */\n      if (schemaAttribute[attr]) {\n        schemaAttribute[attr] = schema[attr];\n      }\n    });\n    this._requestCustomError = requestError;\n    this.timeout = timeout;\n    this.cacheIgnore = cacheIgnore;\n    this.prefetchIgnore = prefetchIgnore;\n    this.preventRunning = preventRunning;\n\n    // 2. Get and check wrapper\n    this._wrapper = this.dom.getWrapper();\n    if (!this._wrapper) {\n      throw new Error('[@barba/core] No Barba wrapper found');\n    }\n    this._wrapper.setAttribute('aria-live', 'polite'); // A11y\n\n    // 3. Init pages (get \"current\" data)\n    this._resetData();\n\n    const { current } = this.data;\n\n    if (!current.container) {\n      throw new Error('[@barba/core] No Barba container found');\n    }\n\n    // 4. Init other modules\n    this.cache = new Cache(cacheIgnore);\n    this.prevent = new Prevent(prefetchIgnore);\n    this.transitions = new Transitions(transitions);\n    this.views = new Views(views);\n\n    // Add prevent custom\n    if (preventCustom !== null) {\n      if (typeof preventCustom !== 'function') {\n        throw new Error('[@barba/core] Prevent should be a function');\n      }\n\n      this.prevent.add('preventCustom', preventCustom);\n    }\n\n    // 5. Use \"current\" data\n    // Init history\n    this.history.init(current.url.href, current.namespace);\n    // Add to cache\n    // TODO: do not cache renderer HTML, only request results…\n    // this.cache.set(current.url.href, Promise.resolve(current.html), 'init');\n\n    // 6. Bind context\n    this._onLinkEnter = this._onLinkEnter.bind(this);\n    this._onLinkClick = this._onLinkClick.bind(this);\n    this._onStateChange = this._onStateChange.bind(this);\n    this._bind();\n\n    // 7. Init plugins\n    this.plugins.forEach(plugin => plugin.init());\n\n    // 8. Barba ready\n    // Set next + trigger for once and `beforeEnter`/`afterEnter` view on page load.\n    const onceData = this.data;\n\n    onceData.trigger = 'barba';\n    onceData.next = onceData.current;\n    onceData.current = { ...this.schemaPage };\n    this.hooks.do('ready', onceData);\n\n    // 9. Finally, do once…\n    this.once(onceData);\n\n    // Clean data for first barba transition…\n    this._resetData();\n  }\n\n  public destroy(): void {\n    this._resetData();\n    this._unbind();\n    this.history.clear();\n    this.hooks.clear();\n    this.plugins = [];\n  }\n\n  get data(): ITransitionData {\n    return this._data;\n  }\n\n  get wrapper(): HTMLElement {\n    return this._wrapper;\n  }\n\n  /**\n   * ### Force a page change without Barba transition.\n   */\n  public force(href: string): void {\n    // DEV\n    // Can be used waiting animation cancellation management…\n    window.location.assign(href);\n  }\n\n  /**\n   * ### Go for a Barba transition.\n   *\n   * Manage \"self page\" href:\n   *\n   * - if same url and no self transition, keep default behavior\n   *   - link: reload the page\n   *   - anchor: scroll to\n   * - if same url with self transition, use it\n   * - then start a page transition.\n   */\n  public go(\n    href: string,\n    trigger: Trigger = 'barba',\n    e?: LinkEvent | PopStateEvent\n  ): Promise<void> {\n    // If animation running, force reload\n    if (this.transitions.isRunning) {\n      this.force(href);\n\n      return;\n    }\n\n    let self = false;\n\n    // Check prevent sameURL against current history\n    // + state check\n    // + update trigger with direction\n    if (trigger === 'popstate') {\n      self =\n        this.history.current &&\n        this.url.getPath(this.history.current.url) === this.url.getPath(href);\n    } else {\n      self = this.prevent.run('sameUrl', null, null, href);\n    }\n\n    if (self && !this.transitions.hasSelf) {\n      return;\n    }\n\n    trigger = this.history.change(href, trigger, e);\n\n    if (e) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n\n    return this.page(href, trigger, self);\n  }\n\n  /**\n   * ### Start an \"once\" transition.\n   *\n   * If some registered \"once\" transition,\n   * get the \"resolved\" transition from the store and start it.\n   */\n  public async once(readyData: ITransitionData): Promise<void> {\n    await this.hooks.do('beforeEnter', readyData);\n\n    // Check if once transition\n    if (this.transitions.hasOnce) {\n      const transition = this.transitions.get(readyData, {\n        once: true,\n      }) as ITransitionOnce;\n\n      await this.transitions.doOnce({ transition, data: readyData });\n    }\n\n    await this.hooks.do('afterEnter', readyData);\n  }\n\n  /**\n   * ### Start a \"page\" transition.\n   *\n   * 1. If no running transition, updates data with full URL properties and trigger.\n   * 2. Get page from cache or init request.\n   * 3. Wait if some transitions need \"next\" data (`sync: true`, `to: …`).\n   * 4. Manage the history, depending on trigger.\n   * 5. Get \"data\" and trigger \"go\" hook.\n   * 6. Get the \"resolved\" transition from the store and start it.\n   * 7. Update title and reset data (current, next = undefined).\n   *\n   * > If \"self\", use the \"self\" transition\n   */\n  public async page(\n    href: string,\n    trigger: Trigger,\n    self: boolean\n  ): Promise<void> {\n    this.data.next.url = {\n      href,\n      ...this.url.parse(href),\n    };\n    this.data.trigger = trigger;\n\n    const page = this.cache.has(href)\n      ? this.cache.update(href, { action: 'click' }).request\n      : this.cache.set(\n          href,\n          this.request(\n            href,\n            this.timeout,\n            this.onRequestError.bind(this, trigger)\n          ),\n          'click'\n        ).request;\n\n    // Need to wait before getting the right transition\n    if (this.transitions.shouldWait) {\n      await helpers.update(page, this.data);\n    }\n\n    const data = this.data;\n\n    // Hook: between trigger and transition\n    // Can be used to resolve \"route\"…\n    await this.hooks.do('page', data);\n\n    try {\n      const transition = this.transitions.get(data, {\n        once: false,\n        self,\n      }) as ITransitionPage;\n\n      await this.transitions.doPage({\n        data,\n        page,\n        transition,\n        wrapper: this._wrapper,\n      });\n\n      this._resetData();\n    } catch (error) {\n      // Something went wrong (rejected promise, error, 404, 505, other…)\n      // TODO: manage / use cases for cancellation\n      // this.logger.debug('Transition cancelled');\n\n      // If transition error and no debug mode, force reload page.\n      /* istanbul ignore else */\n      if (Logger.getLevel() === 0) {\n        this.force(data.current.url.href);\n      }\n    }\n  }\n\n  /**\n   * When a request error occurs.\n   *\n   * Allow the user to manage request error. (E.g: 404)\n   */\n  public onRequestError(trigger: Trigger, ...args: any): boolean {\n    // Cancel transition status\n    this.transitions.isRunning = false;\n\n    const [href, response]: [string, RequestErrorOrResponse] = args;\n    const action = this.cache.getAction(href);\n    this.cache.delete(href);\n\n    // Custom requestError returning false will return here.\n    if (\n      this._requestCustomError &&\n      this._requestCustomError(trigger, action, href, response) === false\n    ) {\n      return false;\n    }\n\n    // Force page change\n    if (action === 'click') {\n      this.force(href);\n    }\n    return false;\n  }\n\n  /**\n   * Programmatically prefetch\n   */\n  public prefetch(href: string) {\n    // Already in cache\n    /* istanbul ignore next */\n    if (this.cache.has(href)) {\n      return;\n    }\n\n    this.cache.set(\n      href,\n      this.request(\n        href,\n        this.timeout,\n        this.onRequestError.bind(this, 'barba')\n      ).catch((error: RequestErrorOrResponse) => {\n        this.logger.error(error);\n      }),\n      'prefetch'\n    );\n  }\n\n  /**\n   * Bind event listeners.\n   */\n  private _bind(): void {\n    /* istanbul ignore else */\n    if (this.prefetchIgnore !== true) {\n      document.addEventListener('mouseover', this._onLinkEnter);\n      document.addEventListener('touchstart', this._onLinkEnter);\n    }\n    document.addEventListener('click', this._onLinkClick);\n    window.addEventListener('popstate', this._onStateChange);\n  }\n\n  /**\n   * Bind event listeners.\n   */\n  private _unbind(): void {\n    /* istanbul ignore else */\n    if (this.prefetchIgnore !== true) {\n      document.removeEventListener('mouseover', this._onLinkEnter);\n      document.removeEventListener('touchstart', this._onLinkEnter);\n    }\n    document.removeEventListener('click', this._onLinkClick);\n    window.removeEventListener('popstate', this._onStateChange);\n  }\n\n  /**\n   * When a element is entered.\n   *\n   * Get valid link element.\n   * Cache URL if needed.\n   */\n  private _onLinkEnter(e: LinkEvent): void {\n    const link = this._getLinkElement(e);\n\n    if (!link) {\n      return;\n    }\n\n    const href = this.dom.getHref(link);\n\n    if (this.prevent.checkHref(href)) {\n      return;\n    }\n\n    // Already in cache\n    if (this.cache.has(href)) {\n      return;\n    }\n\n    this.cache.set(\n      href,\n      this.request(\n        href,\n        this.timeout,\n        this.onRequestError.bind(this, link)\n      ).catch((error: RequestErrorOrResponse) => {\n        this.logger.error(error);\n      }),\n      'enter'\n    );\n  }\n\n  /**\n   * When an element is clicked.\n   *\n   * Get valid link element.\n   * Prevent same URL.\n   * Go for a Barba transition.\n   */\n  private _onLinkClick(e: LinkEvent): void {\n    // This use `prevent.checkLink` under the hood to get eligible link.\n    const link = this._getLinkElement(e);\n\n    if (!link) {\n      return;\n    }\n\n    if (this.transitions.isRunning && this.preventRunning) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      return;\n    }\n\n    this.go(this.dom.getHref(link), link, e);\n  }\n\n  /**\n   * When History state changes.\n   *\n   * Get \"href\" from URL\n   * Go for a Barba transition.\n   */\n  private _onStateChange(e: PopStateEvent): void {\n    this.go(this.url.getHref(), 'popstate', e);\n  }\n\n  /**\n   * Get a valid link ancestor.\n   *\n   * Check for a \"href\" attribute.\n   * Then check if eligible for Barba.\n   */\n  private _getLinkElement(e: LinkEvent): Link {\n    let el = e.target as Link;\n\n    while (el && !this.dom.getHref(el)) {\n      el = (el as HTMLElement).parentNode as Link;\n    }\n\n    // Check prevent\n    if (!el || this.prevent.checkLink(el, e, this.dom.getHref(el))) {\n      return;\n    }\n\n    return el;\n  }\n\n  /**\n   * Reset pages data.\n   *\n   * Set \"current\" and unset \"next\".\n   */\n  private _resetData() {\n    const href = this.url.getHref();\n    const current = {\n      container: this.dom.getContainer(),\n      html: this.dom.getHtml(),\n      namespace: this.dom.getNamespace(),\n      url: {\n        href,\n        ...this.url.parse(href),\n      },\n    };\n\n    this._data = {\n      current,\n      next: { ...this.schemaPage },\n      trigger: undefined,\n    };\n\n    this.hooks.do('reset', this.data);\n  }\n}\n\nconst core = new Core();\n\nexport default core;\n", "//alert(document.location.pathname);\nimport barba from '@barba/core';\nimport { animate } from 'motion';\n\n//Main\ndocument.addEventListener('alpine:init', () => {\n  Alpine.data('utils', () => ({\n    level: 0,\n    time: 5.0,\n    updateRate: 0.1,\n    currentTime: 0.0,\n    score: 0.0,\n    levelArray: [\n      [false, false, false, false, 0.0], //BEGIN RANGE\n      //EASY\n      [false, false, false, true, 10.0],\n      [true, false, false, true, 5.0],\n      [false, true, true, false, 5.0],\n      //MEDIUM\n      [true, true, true, false, 5.0],\n      [true, true, true, true, 5.0],\n      [true, true, true, true, 5.0],\n      //Hard\n      [true, false, false, false, 3.0],\n      [false, true, true, false, 3.0],\n      [true, true, true, false, 3.0],\n      [true, true, true, true, 3.0],\n      [], //END RANGE\n    ],\n    showBlue: Boolean,\n    showYellow: Boolean,\n    showGreen: Boolean,\n    showRed: Boolean,\n    showForm: false,\n    startScreen: true,\n    startButtonText: 'Start New Game',\n    startMessage: 'Welcome to The Game',\n    timerId: 0,\n    timeAnimation: {},\n    buttonAnimation: {},\n    startAnimation: {},\n    animateStartScreen() {\n      animate(\n        '#bearStart',\n        {\n          transform: ['translate(80svw, 0px)', 'translate(-80svw, 0px)'],\n        },\n        { duration: 36, easing: 'linear' }\n      );\n      animate(\n        '#leaderboard-wrapper',\n        {\n          transform: ['translate(80svw, 0px)', 'translate(0px, 0px)'],\n        },\n        { duration: 18, easing: [0.64, 0.64, 0.89, 0.99] }\n      );\n    },\n    init() {\n      this.animateStartScreen();\n      this.time = this.levelArray[this.level][4];\n      this.updateStates();\n      this.currentTime = this.time;\n      this.$watch('level', () => {\n        this.time = this.levelArray[this.level][4];\n        this.timeAnimation = animate(\n          '.time',\n          { scale: [1, 0.5] },\n          { duration: this.time, easing: 'ease-in' }\n        );\n        this.buttonAnimation = animate(\n          '.button.animate',\n          { scale: [1, 0.5], opacity: [1, 0] },\n          { duration: this.time, easing: 'ease-in' }\n        );\n        this.updateStates();\n        this.currentTime = this.time;\n        if (this.level === this.levelArray.length - 1) {\n          this.win();\n        }\n      });\n    },\n    refresh() {\n      animate('.start-screen', { transform: 'translate(0px, 100%)' }, { duration: 0.2 });\n      this.startScreen = false;\n      this.level = 1;\n      this.score = 0.0;\n      this.timeUpdate();\n      /*\n      setTimeout(function () {\n      }, 200);\n      */\n      /*\n      if (window.location.pathname == '/leaderboard') {\n        window.location.pathname = '/';\n      }*/\n    },\n    cloakBlue() {\n      if (!this.startScreen) {\n        if (this.showBlue) {\n          this.showBlue = false;\n          this.addScore();\n        } else {\n          this.reset();\n        }\n        this.update();\n      }\n    },\n    cloakYellow() {\n      if (!this.startScreen) {\n        if (this.showYellow) {\n          this.showYellow = false;\n          this.addScore();\n        } else {\n          this.reset();\n        }\n        this.update();\n      }\n    },\n    cloakGreen() {\n      if (!this.startScreen) {\n        if (this.showGreen) {\n          this.showGreen = false;\n          this.addScore();\n        } else {\n          this.reset();\n        }\n        this.update();\n      }\n    },\n    cloakRed() {\n      if (!this.startScreen) {\n        if (this.showRed) {\n          this.showRed = false;\n          this.addScore();\n        } else {\n          this.reset();\n        }\n        this.update();\n      }\n    },\n    update() {\n      if (!this.showBlue && !this.showYellow && !this.showGreen && !this.showRed) {\n        this.level++;\n      }\n    },\n    timeUpdate() {\n      this.timerId = setInterval(() => {\n        if (this.currentTime > 0) {\n          this.currentTime = Number((this.currentTime - this.updateRate).toFixed(1));\n        } else {\n          this.lose();\n        }\n      }, 1000 * this.updateRate);\n    },\n    updateStates() {\n      this.showBlue = this.levelArray[this.level][0];\n      this.showYellow = this.levelArray[this.level][1];\n      this.showGreen = this.levelArray[this.level][2];\n      this.showRed = this.levelArray[this.level][3];\n    },\n    addScore() {\n      this.score = Number((this.score + this.currentTime).toFixed(1));\n    },\n    divideScore() {\n      this.score = Number((this.score / 2).toFixed(1));\n    },\n    win() {\n      this.stopGame();\n      this.startMessage = 'You Win';\n    },\n    lose() {\n      this.stopGame();\n      this.startMessage = 'You Lose';\n    },\n    stopGame() {\n      clearInterval(this.timerId);\n      this.timeAnimation.stop();\n      this.buttonAnimation.stop();\n      this.level = 0;\n      animate('.start-screen', { transform: 'translate(0px, 0%)' }, { duration: 0.2 });\n      this.animateStartScreen();\n      this.startScreen = true;\n      this.showForm = true;\n      document.getElementById('score').value = this.score;\n    },\n    reset() {\n      this.showBlue = true;\n      this.showYellow = true;\n      this.showGreen = true;\n      this.showRed = true;\n      this.divideScore();\n    },\n  }));\n});\n\n//Barba Init\nbarba.init();\n\n//Key Listeners\ndocument.addEventListener('keypress', (e) => {\n  if (e.key === 'Enter') {\n    document.getElementById('startButton')?.click();\n  }\n  if (e.key === '1') {\n    document.getElementById('blue')?.click();\n  }\n  if (e.key === '2') {\n    document.getElementById('yellow')?.click();\n  }\n  if (e.key === '3') {\n    document.getElementById('green')?.click();\n  }\n  if (e.key === '4') {\n    document.getElementById('red')?.click();\n  }\n});\n\n//fetch from Xano\n/*\nconst myHeaders = new Headers();\nmyHeaders.append('Content-Type', 'application/json');\n\nconst raw = JSON.stringify({\n  Name: 'Hansiiii Hansisher',\n  Score: '1000000',\n  Item_ID: '',\n});\n\nconst requestOptions = {\n  method: 'POST',\n  headers: myHeaders,\n  body: raw,\n  redirect: 'follow',\n};\n\nfetch('https://x8ki-letl-twmt.n7.xano.io/api:SUP2mHFr/user', requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.log('error', error));\n*/\n", "export * from '@motionone/dom';\nexport * from '@motionone/types';\nexport { animate } from './animate.es.js';\n", "export { animate } from './animate/index.es.js';\nexport { createAnimate } from './animate/create-animate.es.js';\nexport { animateStyle } from './animate/animate-style.es.js';\nexport { timeline } from './timeline/index.es.js';\nexport { stagger } from './utils/stagger.es.js';\nexport { spring } from './easing/spring/index.es.js';\nexport { glide } from './easing/glide/index.es.js';\nexport { style } from './animate/style.es.js';\nexport { inView } from './gestures/in-view.es.js';\nexport { resize } from './gestures/resize/index.es.js';\nexport { scroll } from './gestures/scroll/index.es.js';\nexport { ScrollOffset } from './gestures/scroll/offsets/presets.es.js';\nexport { withControls } from './animate/utils/controls.es.js';\nexport { getAnimationData } from './animate/data.es.js';\nexport { getStyleName } from './animate/utils/get-style-name.es.js';\nexport { createMotionState, mountedStates } from './state/index.es.js';\nexport { createStyles } from './animate/utils/style-object.es.js';\nexport { createStyleString } from './animate/utils/style-string.es.js';\n", "import { Animation } from '@motionone/animation';\nimport { createAnimate } from './create-animate.es.js';\n\nconst animate = createAnimate(Animation);\n\nexport { animate };\n", "export { Animation } from './Animation.es.js';\nexport { getEasingFunction } from './utils/easing.es.js';\n", "import { noopReturn, defaults, isEasingGenerator, isEasingList, interpolate } from '@motionone/utils';\nimport { getEasingFunction } from './utils/easing.es.js';\n\nclass Animation {\n    constructor(output, keyframes = [0, 1], { easing, duration: initialDuration = defaults.duration, delay = defaults.delay, endDelay = defaults.endDelay, repeat = defaults.repeat, offset, direction = \"normal\", } = {}) {\n        this.startTime = null;\n        this.rate = 1;\n        this.t = 0;\n        this.cancelTimestamp = null;\n        this.easing = noopReturn;\n        this.duration = 0;\n        this.totalDuration = 0;\n        this.repeat = 0;\n        this.playState = \"idle\";\n        this.finished = new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n        easing = easing || defaults.easing;\n        if (isEasingGenerator(easing)) {\n            const custom = easing.createAnimation(keyframes);\n            easing = custom.easing;\n            keyframes = custom.keyframes || keyframes;\n            initialDuration = custom.duration || initialDuration;\n        }\n        this.repeat = repeat;\n        this.easing = isEasingList(easing) ? noopReturn : getEasingFunction(easing);\n        this.updateDuration(initialDuration);\n        const interpolate$1 = interpolate(keyframes, offset, isEasingList(easing) ? easing.map(getEasingFunction) : noopReturn);\n        this.tick = (timestamp) => {\n            var _a;\n            // TODO: Temporary fix for OptionsResolver typing\n            delay = delay;\n            let t = 0;\n            if (this.pauseTime !== undefined) {\n                t = this.pauseTime;\n            }\n            else {\n                t = (timestamp - this.startTime) * this.rate;\n            }\n            this.t = t;\n            // Convert to seconds\n            t /= 1000;\n            // Rebase on delay\n            t = Math.max(t - delay, 0);\n            /**\n             * If this animation has finished, set the current time\n             * to the total duration.\n             */\n            if (this.playState === \"finished\" && this.pauseTime === undefined) {\n                t = this.totalDuration;\n            }\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = t / this.duration;\n            // TODO progress += iterationStart\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            iterationProgress === 1 && currentIteration--;\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = currentIteration % 2;\n            if (direction === \"reverse\" ||\n                (direction === \"alternate\" && iterationIsOdd) ||\n                (direction === \"alternate-reverse\" && !iterationIsOdd)) {\n                iterationProgress = 1 - iterationProgress;\n            }\n            const p = t >= this.totalDuration ? 1 : Math.min(iterationProgress, 1);\n            const latest = interpolate$1(this.easing(p));\n            output(latest);\n            const isAnimationFinished = this.pauseTime === undefined &&\n                (this.playState === \"finished\" || t >= this.totalDuration + endDelay);\n            if (isAnimationFinished) {\n                this.playState = \"finished\";\n                (_a = this.resolve) === null || _a === void 0 ? void 0 : _a.call(this, latest);\n            }\n            else if (this.playState !== \"idle\") {\n                this.frameRequestId = requestAnimationFrame(this.tick);\n            }\n        };\n        this.play();\n    }\n    play() {\n        const now = performance.now();\n        this.playState = \"running\";\n        if (this.pauseTime !== undefined) {\n            this.startTime = now - this.pauseTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = now;\n        }\n        this.cancelTimestamp = this.startTime;\n        this.pauseTime = undefined;\n        this.frameRequestId = requestAnimationFrame(this.tick);\n    }\n    pause() {\n        this.playState = \"paused\";\n        this.pauseTime = this.t;\n    }\n    finish() {\n        this.playState = \"finished\";\n        this.tick(0);\n    }\n    stop() {\n        var _a;\n        this.playState = \"idle\";\n        if (this.frameRequestId !== undefined) {\n            cancelAnimationFrame(this.frameRequestId);\n        }\n        (_a = this.reject) === null || _a === void 0 ? void 0 : _a.call(this, false);\n    }\n    cancel() {\n        this.stop();\n        this.tick(this.cancelTimestamp);\n    }\n    reverse() {\n        this.rate *= -1;\n    }\n    commitStyles() { }\n    updateDuration(duration) {\n        this.duration = duration;\n        this.totalDuration = duration * (this.repeat + 1);\n    }\n    get currentTime() {\n        return this.t;\n    }\n    set currentTime(t) {\n        if (this.pauseTime !== undefined || this.rate === 0) {\n            this.pauseTime = t;\n        }\n        else {\n            this.startTime = performance.now() - t / this.rate;\n        }\n    }\n    get playbackRate() {\n        return this.rate;\n    }\n    set playbackRate(rate) {\n        this.rate = rate;\n    }\n}\n\nexport { Animation };\n", "export { addUniqueItem, removeItem } from './array.es.js';\nexport { clamp } from './clamp.es.js';\nexport { defaults } from './defaults.es.js';\nexport { getEasingForSegment } from './easing.es.js';\nexport { interpolate } from './interpolate.es.js';\nexport { isCubicBezier } from './is-cubic-bezier.es.js';\nexport { isEasingGenerator } from './is-easing-generator.es.js';\nexport { isEasingList } from './is-easing-list.es.js';\nexport { isFunction } from './is-function.es.js';\nexport { isNumber } from './is-number.es.js';\nexport { isString } from './is-string.es.js';\nexport { mix } from './mix.es.js';\nexport { noop, noopReturn } from './noop.es.js';\nexport { defaultOffset, fillOffset } from './offset.es.js';\nexport { progress } from './progress.es.js';\nexport { time } from './time.es.js';\nexport { velocityPerSecond } from './velocity.es.js';\nexport { wrap } from './wrap.es.js';\n", "function addUniqueItem(array, item) {\n    array.indexOf(item) === -1 && array.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    index > -1 && arr.splice(index, 1);\n}\n\nexport { addUniqueItem, removeItem };\n", "const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n", "const defaults = {\n    duration: 0.3,\n    delay: 0,\n    endDelay: 0,\n    repeat: 0,\n    easing: \"ease\",\n};\n\nexport { defaults };\n", "import { isEasingList } from './is-easing-list.es.js';\nimport { wrap } from './wrap.es.js';\n\nfunction getEasingForSegment(easing, i) {\n    return isEasingList(easing)\n        ? easing[wrap(0, easing.length, i)]\n        : easing;\n}\n\nexport { getEasingForSegment };\n", "import { isNumber } from './is-number.es.js';\n\nconst isEasingList = (easing) => Array.isArray(easing) && !isNumber(easing[0]);\n\nexport { isEasingList };\n", "const isNumber = (value) => typeof value === \"number\";\n\nexport { isNumber };\n", "const wrap = (min, max, v) => {\n    const rangeSize = max - min;\n    return ((((v - min) % rangeSize) + rangeSize) % rangeSize) + min;\n};\n\nexport { wrap };\n", "import { mix } from './mix.es.js';\nimport { noopReturn } from './noop.es.js';\nimport { fillOffset, defaultOffset } from './offset.es.js';\nimport { progress } from './progress.es.js';\nimport { getEasingForSegment } from './easing.es.js';\nimport { clamp } from './clamp.es.js';\n\nfunction interpolate(output, input = defaultOffset(output.length), easing = noopReturn) {\n    const length = output.length;\n    /**\n     * If the input length is lower than the output we\n     * fill the input to match. This currently assumes the input\n     * is an animation progress value so is a good candidate for\n     * moving outside the function.\n     */\n    const remainder = length - input.length;\n    remainder > 0 && fillOffset(input, remainder);\n    return (t) => {\n        let i = 0;\n        for (; i < length - 2; i++) {\n            if (t < input[i + 1])\n                break;\n        }\n        let progressInRange = clamp(0, 1, progress(input[i], input[i + 1], t));\n        const segmentEasing = getEasingForSegment(easing, i);\n        progressInRange = segmentEasing(progressInRange);\n        return mix(output[i], output[i + 1], progressInRange);\n    };\n}\n\nexport { interpolate };\n", "const mix = (min, max, progress) => -progress * min + progress * max + min;\n\nexport { mix };\n", "const noop = () => { };\nconst noopReturn = (v) => v;\n\nexport { noop, noopReturn };\n", "import { mix } from './mix.es.js';\nimport { progress } from './progress.es.js';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\nfunction defaultOffset(length) {\n    const offset = [0];\n    fillOffset(offset, length - 1);\n    return offset;\n}\n\nexport { defaultOffset, fillOffset };\n", "const progress = (min, max, value) => max - min === 0 ? 1 : (value - min) / (max - min);\n\nexport { progress };\n", "import { isNumber } from './is-number.es.js';\n\nconst isCubicBezier = (easing) => Array.isArray(easing) && isNumber(easing[0]);\n\nexport { isCubicBezier };\n", "const isEasingGenerator = (easing) => typeof easing === \"object\" &&\n    Boolean(easing.createAnimation);\n\nexport { isEasingGenerator };\n", "const isFunction = (value) => typeof value === \"function\";\n\nexport { isFunction };\n", "const isString = (value) => typeof value === \"string\";\n\nexport { isString };\n", "const time = {\n    ms: (seconds) => seconds * 1000,\n    s: (milliseconds) => milliseconds / 1000,\n};\n\nexport { time };\n", "import { cubicBezier, steps } from '@motionone/easing';\nimport { isFunction, isCubicBezier, noopReturn } from '@motionone/utils';\n\nconst namedEasings = {\n    ease: cubicBezier(0.25, 0.1, 0.25, 1.0),\n    \"ease-in\": cubicBezier(0.42, 0.0, 1.0, 1.0),\n    \"ease-in-out\": cubicBezier(0.42, 0.0, 0.58, 1.0),\n    \"ease-out\": cubicBezier(0.0, 0.0, 0.58, 1.0),\n};\nconst functionArgsRegex = /\\((.*?)\\)/;\nfunction getEasingFunction(definition) {\n    // If already an easing function, return\n    if (isFunction(definition))\n        return definition;\n    // If an easing curve definition, return bezier function\n    if (isCubicBezier(definition))\n        return cubicBezier(...definition);\n    // If we have a predefined easing function, return\n    if (namedEasings[definition])\n        return namedEasings[definition];\n    // If this is a steps function, attempt to create easing curve\n    if (definition.startsWith(\"steps\")) {\n        const args = functionArgsRegex.exec(definition);\n        if (args) {\n            const argsArray = args[1].split(\",\");\n            return steps(parseFloat(argsArray[0]), argsArray[1].trim());\n        }\n    }\n    return noopReturn;\n}\n\nexport { getEasingFunction };\n", "export { cubicBezier } from './cubic-bezier.es.js';\nexport { steps } from './steps.es.js';\n", "import { noopReturn } from '@motionone/utils';\n\n/*\n  Bezier function generator\n\n  This has been modified from Ga\u00EBtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) * t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noopReturn;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n", "import { clamp } from '@motionone/utils';\n\nconst steps = (steps, direction = \"end\") => (progress) => {\n    progress =\n        direction === \"end\"\n            ? Math.min(progress, 0.999)\n            : Math.max(progress, 0.001);\n    const expanded = progress * steps;\n    const rounded = direction === \"end\" ? Math.floor(expanded) : Math.ceil(expanded);\n    return clamp(0, 1, rounded / steps);\n};\n\nexport { steps };\n", "import { invariant } from 'hey-listen';\nimport { animateStyle } from './animate-style.es.js';\nimport { getOptions } from './utils/options.es.js';\nimport { resolveElements } from '../utils/resolve-elements.es.js';\nimport { withControls } from './utils/controls.es.js';\nimport { resolveOption } from '../utils/stagger.es.js';\n\nfunction createAnimate(AnimatePolyfill) {\n    return function animate(elements, keyframes, options = {}) {\n        elements = resolveElements(elements);\n        const numElements = elements.length;\n        invariant(Boolean(numElements), \"No valid element provided.\");\n        invariant(Boolean(keyframes), \"No keyframes defined.\");\n        /**\n         * Create and start new animations\n         */\n        const animationFactories = [];\n        for (let i = 0; i < numElements; i++) {\n            const element = elements[i];\n            for (const key in keyframes) {\n                const valueOptions = getOptions(options, key);\n                valueOptions.delay = resolveOption(valueOptions.delay, i, numElements);\n                const animation = animateStyle(element, key, keyframes[key], valueOptions, AnimatePolyfill);\n                animationFactories.push(animation);\n            }\n        }\n        return withControls(animationFactories, options, \n        /**\n         * TODO:\n         * If easing is set to spring or glide, duration will be dynamically\n         * generated. Ideally we would dynamically generate this from\n         * animation.effect.getComputedTiming().duration but this isn't\n         * supported in iOS13 or our number polyfill. Perhaps it's possible\n         * to Proxy animations returned from animateStyle that has duration\n         * as a getter.\n         */\n        options.duration);\n    };\n}\n\nexport { createAnimate };\n", "var warning = function () { };\r\nvar invariant = function () { };\r\nif (process.env.NODE_ENV !== 'production') {\r\n    warning = function (check, message) {\r\n        if (!check && typeof console !== 'undefined') {\r\n            console.warn(message);\r\n        }\r\n    };\r\n    invariant = function (check, message) {\r\n        if (!check) {\r\n            throw new Error(message);\r\n        }\r\n    };\r\n}\n\nexport { invariant, warning };\n", "import { getAnimationData, getMotionValue } from './data.es.js';\nimport { isCssVar, registerCssVariable } from './utils/css-var.es.js';\nimport { defaults, isEasingGenerator, isFunction, isEasingList, isNumber, time, noop } from '@motionone/utils';\nimport { isTransform, addTransformToElement, transformDefinitions } from './utils/transforms.es.js';\nimport { convertEasing } from './utils/easing.es.js';\nimport { supports } from './utils/feature-detection.es.js';\nimport { hydrateKeyframes, keyframesList } from './utils/keyframes.es.js';\nimport { style } from './style.es.js';\nimport { getStyleName } from './utils/get-style-name.es.js';\nimport { stopAnimation } from './utils/stop-animation.es.js';\nimport { getUnitConverter } from './utils/get-unit.es.js';\n\nfunction getDevToolsRecord() {\n    return window.__MOTION_DEV_TOOLS_RECORD;\n}\nfunction animateStyle(element, key, keyframesDefinition, options = {}, AnimationPolyfill) {\n    const record = getDevToolsRecord();\n    const isRecording = options.record !== false && record;\n    let animation;\n    let { duration = defaults.duration, delay = defaults.delay, endDelay = defaults.endDelay, repeat = defaults.repeat, easing = defaults.easing, persist = false, direction, offset, allowWebkitAcceleration = false, } = options;\n    const data = getAnimationData(element);\n    const valueIsTransform = isTransform(key);\n    let canAnimateNatively = supports.waapi();\n    /**\n     * If this is an individual transform, we need to map its\n     * key to a CSS variable and update the element's transform style\n     */\n    valueIsTransform && addTransformToElement(element, key);\n    const name = getStyleName(key);\n    const motionValue = getMotionValue(data.values, name);\n    /**\n     * Get definition of value, this will be used to convert numerical\n     * keyframes into the default value type.\n     */\n    const definition = transformDefinitions.get(name);\n    /**\n     * Stop the current animation, if any. Because this will trigger\n     * commitStyles (DOM writes) and we might later trigger DOM reads,\n     * this is fired now and we return a factory function to create\n     * the actual animation that can get called in batch,\n     */\n    stopAnimation(motionValue.animation, !(isEasingGenerator(easing) && motionValue.generator) &&\n        options.record !== false);\n    /**\n     * Batchable factory function containing all DOM reads.\n     */\n    return () => {\n        const readInitialValue = () => { var _a, _b; return (_b = (_a = style.get(element, name)) !== null && _a !== void 0 ? _a : definition === null || definition === void 0 ? void 0 : definition.initialValue) !== null && _b !== void 0 ? _b : 0; };\n        /**\n         * Replace null values with the previous keyframe value, or read\n         * it from the DOM if it's the first keyframe.\n         */\n        let keyframes = hydrateKeyframes(keyframesList(keyframesDefinition), readInitialValue);\n        /**\n         * Detect unit type of keyframes.\n         */\n        const toUnit = getUnitConverter(keyframes, definition);\n        if (isEasingGenerator(easing)) {\n            const custom = easing.createAnimation(keyframes, key !== \"opacity\", readInitialValue, name, motionValue);\n            easing = custom.easing;\n            keyframes = custom.keyframes || keyframes;\n            duration = custom.duration || duration;\n        }\n        /**\n         * If this is a CSS variable we need to register it with the browser\n         * before it can be animated natively. We also set it with setProperty\n         * rather than directly onto the element.style object.\n         */\n        if (isCssVar(name)) {\n            if (supports.cssRegisterProperty()) {\n                registerCssVariable(name);\n            }\n            else {\n                canAnimateNatively = false;\n            }\n        }\n        /**\n         * If we've been passed a custom easing function, and this browser\n         * does **not** support linear() easing, and the value is a transform\n         * (and thus a pure number) we can still support the custom easing\n         * by falling back to the animation polyfill.\n         */\n        if (valueIsTransform &&\n            !supports.linearEasing() &&\n            (isFunction(easing) || (isEasingList(easing) && easing.some(isFunction)))) {\n            canAnimateNatively = false;\n        }\n        /**\n         * If we can animate this value with WAAPI, do so.\n         */\n        if (canAnimateNatively) {\n            /**\n             * Convert numbers to default value types. Currently this only supports\n             * transforms but it could also support other value types.\n             */\n            if (definition) {\n                keyframes = keyframes.map((value) => isNumber(value) ? definition.toDefaultUnit(value) : value);\n            }\n            /**\n             * If this browser doesn't support partial/implicit keyframes we need to\n             * explicitly provide one.\n             */\n            if (keyframes.length === 1 &&\n                (!supports.partialKeyframes() || isRecording)) {\n                keyframes.unshift(readInitialValue());\n            }\n            const animationOptions = {\n                delay: time.ms(delay),\n                duration: time.ms(duration),\n                endDelay: time.ms(endDelay),\n                easing: !isEasingList(easing)\n                    ? convertEasing(easing, duration)\n                    : undefined,\n                direction,\n                iterations: repeat + 1,\n                fill: \"both\",\n            };\n            animation = element.animate({\n                [name]: keyframes,\n                offset,\n                easing: isEasingList(easing)\n                    ? easing.map((thisEasing) => convertEasing(thisEasing, duration))\n                    : undefined,\n            }, animationOptions);\n            /**\n             * Polyfill finished Promise in browsers that don't support it\n             */\n            if (!animation.finished) {\n                animation.finished = new Promise((resolve, reject) => {\n                    animation.onfinish = resolve;\n                    animation.oncancel = reject;\n                });\n            }\n            const target = keyframes[keyframes.length - 1];\n            animation.finished\n                .then(() => {\n                if (persist)\n                    return;\n                // Apply styles to target\n                style.set(element, name, target);\n                // Ensure fill modes don't persist\n                animation.cancel();\n            })\n                .catch(noop);\n            /**\n             * This forces Webkit to run animations on the main thread by exploiting\n             * this condition:\n             * https://trac.webkit.org/browser/webkit/trunk/Source/WebCore/platform/graphics/ca/GraphicsLayerCA.cpp?rev=281238#L1099\n             *\n             * This fixes Webkit's timing bugs, like accelerated animations falling\n             * out of sync with main thread animations and massive delays in starting\n             * accelerated animations in WKWebView.\n             */\n            if (!allowWebkitAcceleration)\n                animation.playbackRate = 1.000001;\n            /**\n             * If we can't animate the value natively then we can fallback to the numbers-only\n             * polyfill for transforms.\n             */\n        }\n        else if (AnimationPolyfill && valueIsTransform) {\n            /**\n             * If any keyframe is a string (because we measured it from the DOM), we need to convert\n             * it into a number before passing to the Animation polyfill.\n             */\n            keyframes = keyframes.map((value) => typeof value === \"string\" ? parseFloat(value) : value);\n            /**\n             * If we only have a single keyframe, we need to create an initial keyframe by reading\n             * the current value from the DOM.\n             */\n            if (keyframes.length === 1) {\n                keyframes.unshift(parseFloat(readInitialValue()));\n            }\n            animation = new AnimationPolyfill((latest) => {\n                style.set(element, name, toUnit ? toUnit(latest) : latest);\n            }, keyframes, Object.assign(Object.assign({}, options), { duration,\n                easing }));\n        }\n        else {\n            const target = keyframes[keyframes.length - 1];\n            style.set(element, name, definition && isNumber(target)\n                ? definition.toDefaultUnit(target)\n                : target);\n        }\n        if (isRecording) {\n            record(element, key, keyframes, {\n                duration,\n                delay: delay,\n                easing,\n                repeat,\n                offset,\n            }, \"motion-one\");\n        }\n        motionValue.setAnimation(animation);\n        return animation;\n    };\n}\n\nexport { animateStyle };\n", "import { MotionValue } from '@motionone/types';\n\nconst data = new WeakMap();\nfunction getAnimationData(element) {\n    if (!data.has(element)) {\n        data.set(element, {\n            transforms: [],\n            values: new Map(),\n        });\n    }\n    return data.get(element);\n}\nfunction getMotionValue(motionValues, name) {\n    if (!motionValues.has(name)) {\n        motionValues.set(name, new MotionValue());\n    }\n    return motionValues.get(name);\n}\n\nexport { getAnimationData, getMotionValue };\n", "export { MotionValue } from './MotionValue.es.js';\n", "/**\n * The MotionValue tracks the state of a single animatable\n * value. Currently, updatedAt and current are unused. The\n * long term idea is to use this to minimise the number\n * of DOM reads, and to abstract the DOM interactions here.\n */\nclass MotionValue {\n    setAnimation(animation) {\n        this.animation = animation;\n        animation === null || animation === void 0 ? void 0 : animation.finished.then(() => this.clearAnimation()).catch(() => { });\n    }\n    clearAnimation() {\n        this.animation = this.generator = undefined;\n    }\n}\n\nexport { MotionValue };\n", "import { transformDefinitions } from './transforms.es.js';\n\nconst isCssVar = (name) => name.startsWith(\"--\");\nconst registeredProperties = new Set();\nfunction registerCssVariable(name) {\n    if (registeredProperties.has(name))\n        return;\n    registeredProperties.add(name);\n    try {\n        const { syntax, initialValue } = transformDefinitions.has(name)\n            ? transformDefinitions.get(name)\n            : {};\n        CSS.registerProperty({\n            name,\n            inherits: false,\n            syntax,\n            initialValue,\n        });\n    }\n    catch (e) { }\n}\n\nexport { isCssVar, registerCssVariable, registeredProperties };\n", "import { noopReturn, addUniqueItem } from '@motionone/utils';\nimport { getAnimationData } from '../data.es.js';\n\n/**\n * A list of all transformable axes. We'll use this list to generated a version\n * of each axes for each transform.\n */\nconst axes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * An ordered array of each transformable value. By default, transform values\n * will be sorted to this order.\n */\nconst order = [\"translate\", \"scale\", \"rotate\", \"skew\"];\nconst transformAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n};\nconst rotation = {\n    syntax: \"<angle>\",\n    initialValue: \"0deg\",\n    toDefaultUnit: (v) => v + \"deg\",\n};\nconst baseTransformProperties = {\n    translate: {\n        syntax: \"<length-percentage>\",\n        initialValue: \"0px\",\n        toDefaultUnit: (v) => v + \"px\",\n    },\n    rotate: rotation,\n    scale: {\n        syntax: \"<number>\",\n        initialValue: 1,\n        toDefaultUnit: noopReturn,\n    },\n    skew: rotation,\n};\nconst transformDefinitions = new Map();\nconst asTransformCssVar = (name) => `--motion-${name}`;\n/**\n * Generate a list of every possible transform key\n */\nconst transforms = [\"x\", \"y\", \"z\"];\norder.forEach((name) => {\n    axes.forEach((axis) => {\n        transforms.push(name + axis);\n        transformDefinitions.set(asTransformCssVar(name + axis), baseTransformProperties[name]);\n    });\n});\n/**\n * A function to use with Array.sort to sort transform keys by their default order.\n */\nconst compareTransformOrder = (a, b) => transforms.indexOf(a) - transforms.indexOf(b);\n/**\n * Provide a quick way to check if a string is the name of a transform\n */\nconst transformLookup = new Set(transforms);\nconst isTransform = (name) => transformLookup.has(name);\nconst addTransformToElement = (element, name) => {\n    // Map x to translateX etc\n    if (transformAlias[name])\n        name = transformAlias[name];\n    const { transforms } = getAnimationData(element);\n    addUniqueItem(transforms, name);\n    /**\n     * TODO: An optimisation here could be to cache the transform in element data\n     * and only update if this has changed.\n     */\n    element.style.transform = buildTransformTemplate(transforms);\n};\nconst buildTransformTemplate = (transforms) => transforms\n    .sort(compareTransformOrder)\n    .reduce(transformListToString, \"\")\n    .trim();\nconst transformListToString = (template, name) => `${template} ${name}(var(${asTransformCssVar(name)}))`;\n\nexport { addTransformToElement, asTransformCssVar, axes, buildTransformTemplate, compareTransformOrder, isTransform, transformAlias, transformDefinitions };\n", "import { isFunction, defaults, isCubicBezier, progress } from '@motionone/utils';\nimport { supports } from './feature-detection.es.js';\n\n// Create a linear easing point for every x second\nconst resolution = 0.015;\nconst generateLinearEasingPoints = (easing, duration) => {\n    let points = \"\";\n    const numPoints = Math.round(duration / resolution);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return points.substring(0, points.length - 2);\n};\nconst convertEasing = (easing, duration) => {\n    if (isFunction(easing)) {\n        return supports.linearEasing()\n            ? `linear(${generateLinearEasingPoints(easing, duration)})`\n            : defaults.easing;\n    }\n    else {\n        return isCubicBezier(easing) ? cubicBezierAsString(easing) : easing;\n    }\n};\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\n\nexport { convertEasing, cubicBezierAsString, generateLinearEasingPoints };\n", "const testAnimation = (keyframes, options) => document.createElement(\"div\").animate(keyframes, options);\nconst featureTests = {\n    cssRegisterProperty: () => typeof CSS !== \"undefined\" &&\n        Object.hasOwnProperty.call(CSS, \"registerProperty\"),\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n    partialKeyframes: () => {\n        try {\n            testAnimation({ opacity: [1] });\n        }\n        catch (e) {\n            return false;\n        }\n        return true;\n    },\n    finished: () => Boolean(testAnimation({ opacity: [0, 1] }, { duration: 0.001 }).finished),\n    linearEasing: () => {\n        try {\n            testAnimation({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n        }\n        catch (e) {\n            return false;\n        }\n        return true;\n    },\n};\nconst results = {};\nconst supports = {};\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n", "function hydrateKeyframes(keyframes, readInitialValue) {\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] === null) {\n            keyframes[i] = i ? keyframes[i - 1] : readInitialValue();\n        }\n    }\n    return keyframes;\n}\nconst keyframesList = (keyframes) => Array.isArray(keyframes) ? keyframes : [keyframes];\n\nexport { hydrateKeyframes, keyframesList };\n", "import { isCssVar } from './utils/css-var.es.js';\nimport { getStyleName } from './utils/get-style-name.es.js';\nimport { transformDefinitions } from './utils/transforms.es.js';\n\nconst style = {\n    get: (element, name) => {\n        name = getStyleName(name);\n        let value = isCssVar(name)\n            ? element.style.getPropertyValue(name)\n            : getComputedStyle(element)[name];\n        if (!value && value !== 0) {\n            const definition = transformDefinitions.get(name);\n            if (definition)\n                value = definition.initialValue;\n        }\n        return value;\n    },\n    set: (element, name, value) => {\n        name = getStyleName(name);\n        if (isCssVar(name)) {\n            element.style.setProperty(name, value);\n        }\n        else {\n            element.style[name] = value;\n        }\n    },\n};\n\nexport { style };\n", "import { isTransform, asTransformCssVar, transformAlias } from './transforms.es.js';\n\nfunction getStyleName(key) {\n    if (transformAlias[key])\n        key = transformAlias[key];\n    return isTransform(key) ? asTransformCssVar(key) : key;\n}\n\nexport { getStyleName };\n", "function stopAnimation(animation, needsCommit = true) {\n    if (!animation || animation.playState === \"finished\")\n        return;\n    // Suppress error thrown by WAAPI\n    try {\n        if (animation.stop) {\n            animation.stop();\n        }\n        else {\n            needsCommit && animation.commitStyles();\n            animation.cancel();\n        }\n    }\n    catch (e) { }\n}\n\nexport { stopAnimation };\n", "import { noopReturn, isString } from '@motionone/utils';\n\nfunction getUnitConverter(keyframes, definition) {\n    var _a;\n    let toUnit = (definition === null || definition === void 0 ? void 0 : definition.toDefaultUnit) || noopReturn;\n    const finalKeyframe = keyframes[keyframes.length - 1];\n    if (isString(finalKeyframe)) {\n        const unit = ((_a = finalKeyframe.match(/(-?[\\d.]+)([a-z%]*)/)) === null || _a === void 0 ? void 0 : _a[2]) || \"\";\n        if (unit)\n            toUnit = (value) => value + unit;\n    }\n    return toUnit;\n}\n\nexport { getUnitConverter };\n", "const getOptions = (options, key) => \n/**\n * TODO: Make test for this\n * Always return a new object otherwise delay is overwritten by results of stagger\n * and this results in no stagger\n */\noptions[key] ? Object.assign(Object.assign({}, options), options[key]) : Object.assign({}, options);\n\nexport { getOptions };\n", "function resolveElements(elements, selectorCache) {\n    var _a;\n    if (typeof elements === \"string\") {\n        if (selectorCache) {\n            (_a = selectorCache[elements]) !== null && _a !== void 0 ? _a : (selectorCache[elements] = document.querySelectorAll(elements));\n            elements = selectorCache[elements];\n        }\n        else {\n            elements = document.querySelectorAll(elements);\n        }\n    }\n    else if (elements instanceof Element) {\n        elements = [elements];\n    }\n    /**\n     * Return an empty array\n     */\n    return Array.from(elements || []);\n}\n\nexport { resolveElements };\n", "import { defaults, noop, time } from '@motionone/utils';\nimport { stopAnimation } from './stop-animation.es.js';\n\nconst createAnimation = (factory) => factory();\nconst withControls = (animationFactory, options, duration = defaults.duration) => {\n    return new Proxy({\n        animations: animationFactory.map(createAnimation).filter(Boolean),\n        duration,\n        options,\n    }, controls);\n};\n/**\n * TODO:\n * Currently this returns the first animation, ideally it would return\n * the first active animation.\n */\nconst getActiveAnimation = (state) => state.animations[0];\nconst controls = {\n    get: (target, key) => {\n        const activeAnimation = getActiveAnimation(target);\n        switch (key) {\n            case \"duration\":\n                return target.duration;\n            case \"currentTime\":\n                return time.s((activeAnimation === null || activeAnimation === void 0 ? void 0 : activeAnimation[key]) || 0);\n            case \"playbackRate\":\n            case \"playState\":\n                return activeAnimation === null || activeAnimation === void 0 ? void 0 : activeAnimation[key];\n            case \"finished\":\n                if (!target.finished) {\n                    target.finished = Promise.all(target.animations.map(selectFinished)).catch(noop);\n                }\n                return target.finished;\n            case \"stop\":\n                return () => {\n                    target.animations.forEach((animation) => stopAnimation(animation));\n                };\n            case \"forEachNative\":\n                /**\n                 * This is for internal use only, fire a callback for each\n                 * underlying animation.\n                 */\n                return (callback) => {\n                    target.animations.forEach((animation) => callback(animation, target));\n                };\n            default:\n                return typeof (activeAnimation === null || activeAnimation === void 0 ? void 0 : activeAnimation[key]) === \"undefined\"\n                    ? undefined\n                    : () => target.animations.forEach((animation) => animation[key]());\n        }\n    },\n    set: (target, key, value) => {\n        switch (key) {\n            case \"currentTime\":\n                value = time.ms(value);\n            // Fall-through\n            case \"playbackRate\":\n                for (let i = 0; i < target.animations.length; i++) {\n                    target.animations[i][key] = value;\n                }\n                return true;\n        }\n        return false;\n    },\n};\nconst selectFinished = (animation) => animation.finished;\n\nexport { controls, withControls };\n", "import { isNumber, isFunction } from '@motionone/utils';\nimport { getEasingFunction } from '@motionone/animation';\n\nfunction stagger(duration = 0.1, { start = 0, from = 0, easing } = {}) {\n    return (i, total) => {\n        const fromIndex = isNumber(from) ? from : getFromIndex(from, total);\n        const distance = Math.abs(fromIndex - i);\n        let delay = duration * distance;\n        if (easing) {\n            const maxDelay = total * duration;\n            const easingFunction = getEasingFunction(easing);\n            delay = easingFunction(delay / maxDelay) * maxDelay;\n        }\n        return start + delay;\n    };\n}\nfunction getFromIndex(from, total) {\n    if (from === \"first\") {\n        return 0;\n    }\n    else {\n        const lastIndex = total - 1;\n        return from === \"last\" ? lastIndex : lastIndex / 2;\n    }\n}\nfunction resolveOption(option, i, total) {\n    return isFunction(option) ? option(i, total) : option;\n}\n\nexport { getFromIndex, resolveOption, stagger };\n", "import { animate as animate$1, withControls } from '@motionone/dom';\nimport { isFunction } from '@motionone/utils';\nimport { Animation } from '@motionone/animation';\n\nfunction animateProgress(target, options = {}) {\n    return withControls([\n        () => {\n            const animation = new Animation(target, [0, 1], options);\n            animation.finished.catch(() => { });\n            return animation;\n        },\n    ], options, options.duration);\n}\nfunction animate(target, keyframesOrOptions, options) {\n    const factory = isFunction(target) ? animateProgress : animate$1;\n    return factory(target, keyframesOrOptions, options);\n}\n\nexport { animate, animateProgress };\n"],
  "mappings": "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",
  "names": ["_catch", "body", "recover", "result", "e", "then", "Symbol", "iterator", "asyncIterator", "LogLevels", "HookMethods", "_level", "off", "Logger", "t", "source", "this", "_source", "getLevel", "setLevel", "name", "error", "objects", "_log", "console", "warn", "warning", "info", "debug", "log", "fn", "level", "apply", "concat", "pathToRegexp", "regexpToFunction", "parse", "tokensToFunction", "tokensToRegExp", "DEFAULT_DELIMITER", "PATH_REGEXP", "RegExp", "join", "str", "options", "res", "tokens", "key", "index", "path", "defaultDelimiter", "delimiter", "whitelist", "pathEscaped", "exec", "m", "escaped", "offset", "slice", "length", "prev", "capture", "group", "modifier", "k", "c", "indexOf", "push", "pattern", "prefix", "optional", "repeat", "escapeGroup", "escapeString", "substr", "re", "keys", "pathname", "params", "decode", "decodeURIComponent", "i", "split", "map", "value", "matches", "Array", "flags", "data", "encode", "encodeURIComponent", "validate", "token", "segment", "isArray", "TypeError", "j", "test", "String", "replace", "sensitive", "strict", "start", "end", "endsWith", "route", "endToken", "isEndDelimited", "groups", "match", "parts", "schemaAttribute", "container", "history", "namespace", "prevent", "wrapper", "dom", "DOMParser", "n", "toString", "el", "outerHTML", "toDocument", "htmlString", "_parser", "parseFromString", "toElement", "div", "document", "createElement", "innerHTML", "getHtml", "doc", "documentElement", "getWrapper", "scope", "querySelector", "_attr", "getContainer", "removeContainer", "contains", "parentNode", "removeChild", "addContainer", "existingContainer", "_insertAfter", "appendChild", "getNamespace", "ns", "getAttribute", "getHref", "tagName", "toLowerCase", "href", "resolveUrl", "baseVal", "urls", "numUrls", "Error", "base", "arguments", "head", "getElementsByTagName", "insertBefore", "firstChild", "resolved", "a", "newNode", "referenceNode", "nextSibling", "init", "url", "_session", "state", "scroll", "x", "window", "scrollX", "y", "scrollY", "_states", "_pointer", "item", "from", "states", "replaceState", "change", "trigger", "_getDirection", "add", "size", "action", "_getAction", "pushState", "update", "get", "set", "remove", "splice", "pop", "clear", "newStates", "attr", "hasAttribute", "diff", "Math", "abs", "page", "next", "html", "nextDocument", "title", "ptr", "Promise", "resolve", "requestAnimationFrame", "getOrigin", "location", "origin", "getPort", "port", "portString", "substring", "parseInt", "hash", "query", "hashIndex", "queryIndex", "parseQuery", "reduce", "acc", "clean", "request", "ttl", "requestError", "reject", "xhr", "XMLHttpRequest", "onreadystatechange", "readyState", "DONE", "status", "responseText", "statusText", "ontimeout", "err", "onerror", "open", "timeout", "setRequestHeader", "send", "obj", "runAsync", "func", "ctx", "r", "args", "async", "promise", "answer", "isPromise", "hooks", "_this", "Map", "registered", "all", "forEach", "hook", "_this2", "has", "Set", "chain", "_this3", "logger", "_this4", "help", "Ignore", "ignore", "_ignoreAll", "paths", "_ignoreRegexes", "p", "checkHref", "some", "regex", "Cache", "_state", "getRequest", "getAction", "exists", "newTab", "event", "which", "metaKey", "ctrlKey", "shiftKey", "altKey", "blank", "target", "corsDomain", "protocol", "hostname", "corsPort", "download", "preventSelf", "preventAll", "Boolean", "closest", "sameUrl", "Prevent", "check", "suite", "tests", "run", "checkLink", "BarbaError", "label", "o", "captureStackTrace", "Store", "transitions", "type", "_rules", "position", "filters", "once", "filter", "self", "matching", "active", "find", "valid", "reverse", "rule", "_check", "to", "activeMatch", "transitionType", "s", "infos", "Object", "_addPriority", "sort", "b", "priority", "leave", "enter", "transition", "direction", "isValid", "hasMatch", "strRule", "objRule", "fnName", "current", "names", "_calculatePriority", "ruleName", "ruleIndex", "pow", "Transitions", "store", "doOnce", "_running", "u", "_doAsyncHook", "doPage", "f", "sync", "h", "_isTransitionError", "leaveResult", "helpers", "values", "message", "Views", "views", "view", "byNamespace", "_createHook", "Element", "prototype", "msMatchesSelector", "webkitMatchesSelector", "parentElement", "nodeType", "schemaPage", "version", "use", "plugin", "installedPlugins", "plugins", "install", "schema", "v", "cacheIgnore", "prefetchIgnore", "preventRunning", "preventCustom", "g", "logLevel", "E", "_requestCustomError", "_wrapper", "setAttribute", "_resetData", "cache", "_onLinkEnter", "bind", "_onLinkClick", "_onStateChange", "_bind", "onceData", "destroy", "_unbind", "force", "assign", "go", "isRunning", "getPath", "hasSelf", "stopPropagation", "preventDefault", "readyData", "hasOnce", "onRequestError", "shouldWait", "response", "prefetch", "_this5", "addEventListener", "removeEventListener", "link", "_getLinkElement", "_this6", "_data", "undefined", "progress", "steps", "progress", "progress", "transforms", "data", "animate", "animate", "animate", "barba"]
}
